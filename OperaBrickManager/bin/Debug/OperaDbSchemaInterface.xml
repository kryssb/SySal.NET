<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OperaDbSchemaInterface</name>
    </assembly>
    <members>
        <member name="T:SySal.OperaDb.Schema">
            <summary>
            Static class that allows access to schema components of the OPERA DB.
            Its DB field must be set before the class can be used.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.OrderBy">
            <summary>
            Retrieval order for query results.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_BUFFERFLUSH">
            <summary>
            Accesses the LZ_BUFFERFLUSH table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_BUFFERFLUSH.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_BUFFERFLUSH. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_BUFFERFLUSH._STATUS">
            <summary>
            Retrieves STATUS for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_BUFFERFLUSH.Insert(System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_STATUS">the value to be inserted for STATUS. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_BUFFERFLUSH.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_BUFFERFLUSH and retrieves them into a new LZ_BUFFERFLUSH object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_BUFFERFLUSH class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_BUFFERFLUSH.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_BUFFERFLUSH.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_GRAINS">
            <summary>
            Accesses the LZ_GRAINS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_GRAINS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_GRAINS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_GRAINS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_GRAINS._ID_ZONE">
            <summary>
            Retrieves ID_ZONE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_GRAINS._SIDE">
            <summary>
            Retrieves SIDE for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_GRAINS._ID_MIPMICROTRACK">
            <summary>
            Retrieves ID_MIPMICROTRACK for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_GRAINS._ID">
            <summary>
            Retrieves ID for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_GRAINS._X">
            <summary>
            Retrieves X for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_GRAINS._Y">
            <summary>
            Retrieves Y for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_GRAINS._Z">
            <summary>
            Retrieves Z for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_GRAINS._AREA">
            <summary>
            Retrieves AREA for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_GRAINS._DARKNESS">
            <summary>
            Retrieves DARKNESS for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_GRAINS.Insert(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_ZONE">the value to be inserted for ID_ZONE. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_SIDE">the value to be inserted for SIDE. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_ID_MIPMICROTRACK">the value to be inserted for ID_MIPMICROTRACK. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID">the value to be inserted for ID. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_X">the value to be inserted for X. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_Y">the value to be inserted for Y. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_Z">the value to be inserted for Z. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_AREA">the value to be inserted for AREA. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_DARKNESS">the value to be inserted for DARKNESS. The value for this parameter can be double or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_GRAINS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_GRAINS and retrieves them into a new LZ_GRAINS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_GRAINS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_GRAINS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_GRAINS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_MACHINEVARS">
            <summary>
            Accesses the LZ_MACHINEVARS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_MACHINEVARS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_MACHINEVARS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MACHINEVARS._ID_MACHINE">
            <summary>
            Retrieves ID_MACHINE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MACHINEVARS._NAME">
            <summary>
            Retrieves NAME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MACHINEVARS._VALUE">
            <summary>
            Retrieves VALUE for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_MACHINEVARS.Insert(System.Int64,System.String,System.String)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_MACHINE">the value to be inserted for ID_MACHINE.</param>
            <param name="i_NAME">the value to be inserted for NAME.</param>
            <param name="i_VALUE">the value to be inserted for VALUE.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_MACHINEVARS.SelectPrimaryKey(System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from LZ_MACHINEVARS and retrieves them into a new LZ_MACHINEVARS object.
            </summary>
            <param name="i_ID_MACHINE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_NAME">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the LZ_MACHINEVARS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_MACHINEVARS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_MACHINEVARS and retrieves them into a new LZ_MACHINEVARS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_MACHINEVARS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MACHINEVARS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MACHINEVARS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_MIPBASETRACKS">
            <summary>
            Accesses the LZ_MIPBASETRACKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_MIPBASETRACKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_MIPBASETRACKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._ID_ZONE">
            <summary>
            Retrieves ID_ZONE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._ID">
            <summary>
            Retrieves ID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._POSX">
            <summary>
            Retrieves POSX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._POSY">
            <summary>
            Retrieves POSY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._SLOPEX">
            <summary>
            Retrieves SLOPEX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._SLOPEY">
            <summary>
            Retrieves SLOPEY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._GRAINS">
            <summary>
            Retrieves GRAINS for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._AREASUM">
            <summary>
            Retrieves AREASUM for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._PH">
            <summary>
            Retrieves PH for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._SIGMA">
            <summary>
            Retrieves SIGMA for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._ID_DOWNSIDE">
            <summary>
            Retrieves ID_DOWNSIDE for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._ID_DOWNTRACK">
            <summary>
            Retrieves ID_DOWNTRACK for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._ID_UPSIDE">
            <summary>
            Retrieves ID_UPSIDE for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS._ID_UPTRACK">
            <summary>
            Retrieves ID_UPTRACK for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_MIPBASETRACKS.Insert(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_ZONE">the value to be inserted for ID_ZONE. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID">the value to be inserted for ID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_POSX">the value to be inserted for POSX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_POSY">the value to be inserted for POSY. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_SLOPEX">the value to be inserted for SLOPEX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_SLOPEY">the value to be inserted for SLOPEY. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_GRAINS">the value to be inserted for GRAINS. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_AREASUM">the value to be inserted for AREASUM. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_PH">the value to be inserted for PH. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_SIGMA">the value to be inserted for SIGMA. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_ID_DOWNSIDE">the value to be inserted for ID_DOWNSIDE. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_ID_DOWNTRACK">the value to be inserted for ID_DOWNTRACK. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_UPSIDE">the value to be inserted for ID_UPSIDE. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_ID_UPTRACK">the value to be inserted for ID_UPTRACK. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_MIPBASETRACKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_MIPBASETRACKS and retrieves them into a new LZ_MIPBASETRACKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_MIPBASETRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPBASETRACKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS">
            <summary>
            Accesses the LZ_MIPMICROTRACKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_MIPMICROTRACKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS._ID_ZONE">
            <summary>
            Retrieves ID_ZONE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS._SIDE">
            <summary>
            Retrieves SIDE for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS._ID">
            <summary>
            Retrieves ID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS._POSX">
            <summary>
            Retrieves POSX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS._POSY">
            <summary>
            Retrieves POSY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS._SLOPEX">
            <summary>
            Retrieves SLOPEX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS._SLOPEY">
            <summary>
            Retrieves SLOPEY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS._GRAINS">
            <summary>
            Retrieves GRAINS for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS._AREASUM">
            <summary>
            Retrieves AREASUM for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS._PH">
            <summary>
            Retrieves PH for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS._SIGMA">
            <summary>
            Retrieves SIGMA for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS._ID_VIEW">
            <summary>
            Retrieves ID_VIEW for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS.Insert(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_ID_ZONE">the value to be inserted for ID_ZONE. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_SIDE">the value to be inserted for SIDE. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_ID">the value to be inserted for ID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_POSX">the value to be inserted for POSX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_POSY">the value to be inserted for POSY. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_SLOPEX">the value to be inserted for SLOPEX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_SLOPEY">the value to be inserted for SLOPEY. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_GRAINS">the value to be inserted for GRAINS. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_AREASUM">the value to be inserted for AREASUM. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_PH">the value to be inserted for PH. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_SIGMA">the value to be inserted for SIGMA. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_ID_VIEW">the value to be inserted for ID_VIEW. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_MIPMICROTRACKS and retrieves them into a new LZ_MIPMICROTRACKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_MIPMICROTRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_MIPMICROTRACKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_PATTERN_MATCH">
            <summary>
            Accesses the LZ_PATTERN_MATCH table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_PATTERN_MATCH.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_PATTERN_MATCH. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_PATTERN_MATCH._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_PATTERN_MATCH._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_PATTERN_MATCH._ID_FIRSTZONE">
            <summary>
            Retrieves ID_FIRSTZONE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_PATTERN_MATCH._ID_SECONDZONE">
            <summary>
            Retrieves ID_SECONDZONE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_PATTERN_MATCH._ID_INFIRSTZONE">
            <summary>
            Retrieves ID_INFIRSTZONE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_PATTERN_MATCH._ID_INSECONDZONE">
            <summary>
            Retrieves ID_INSECONDZONE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_PATTERN_MATCH.Insert(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_FIRSTZONE">the value to be inserted for ID_FIRSTZONE. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_SECONDZONE">the value to be inserted for ID_SECONDZONE. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_INFIRSTZONE">the value to be inserted for ID_INFIRSTZONE. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_INSECONDZONE">the value to be inserted for ID_INSECONDZONE. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_PATTERN_MATCH.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_PATTERN_MATCH and retrieves them into a new LZ_PATTERN_MATCH object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_PATTERN_MATCH class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_PATTERN_MATCH.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_PATTERN_MATCH.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_PUBLISHERS">
            <summary>
            Accesses the LZ_PUBLISHERS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_PUBLISHERS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_PUBLISHERS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_PUBLISHERS._NAME">
            <summary>
            Retrieves NAME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_PUBLISHERS._TYPE">
            <summary>
            Retrieves TYPE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_PUBLISHERS._SPACEMIN">
            <summary>
            Retrieves SPACEMIN for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_PUBLISHERS._SPACEMAX">
            <summary>
            Retrieves SPACEMAX for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_PUBLISHERS.Insert(System.String,System.String,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_NAME">the value to be inserted for NAME.</param>
            <param name="i_TYPE">the value to be inserted for TYPE.</param>
            <param name="i_SPACEMIN">the value to be inserted for SPACEMIN. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_SPACEMAX">the value to be inserted for SPACEMAX. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_PUBLISHERS.SelectPrimaryKey(System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from LZ_PUBLISHERS and retrieves them into a new LZ_PUBLISHERS object.
            </summary>
            <param name="i_NAME">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows.</param>
            <returns>a new instance of the LZ_PUBLISHERS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_PUBLISHERS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_PUBLISHERS and retrieves them into a new LZ_PUBLISHERS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_PUBLISHERS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_PUBLISHERS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_PUBLISHERS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_SCANBACK_CANCEL_PATH">
            <summary>
            Accesses the LZ_SCANBACK_CANCEL_PATH table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_CANCEL_PATH.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_SCANBACK_CANCEL_PATH. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_CANCEL_PATH._P_BRICKID">
            <summary>
            Retrieves P_BRICKID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_CANCEL_PATH._P_PATHID">
            <summary>
            Retrieves P_PATHID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_CANCEL_PATH._P_PLATEID">
            <summary>
            Retrieves P_PLATEID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_CANCEL_PATH.Insert(System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_P_BRICKID">the value to be inserted for P_BRICKID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_PATHID">the value to be inserted for P_PATHID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_PLATEID">the value to be inserted for P_PLATEID. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_CANCEL_PATH.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_SCANBACK_CANCEL_PATH and retrieves them into a new LZ_SCANBACK_CANCEL_PATH object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_SCANBACK_CANCEL_PATH class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_CANCEL_PATH.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_CANCEL_PATH.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_SCANBACK_CANDIDATE">
            <summary>
            Accesses the LZ_SCANBACK_CANDIDATE table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_CANDIDATE.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_SCANBACK_CANDIDATE. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_CANDIDATE._P_BRICKID">
            <summary>
            Retrieves P_BRICKID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_CANDIDATE._P_PLATEID">
            <summary>
            Retrieves P_PLATEID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_CANDIDATE._P_PATHID">
            <summary>
            Retrieves P_PATHID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_CANDIDATE._P_ZONEID">
            <summary>
            Retrieves P_ZONEID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_CANDIDATE._P_CANDID">
            <summary>
            Retrieves P_CANDID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_CANDIDATE._P_MANUAL">
            <summary>
            Retrieves P_MANUAL for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_CANDIDATE.Insert(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_P_BRICKID">the value to be inserted for P_BRICKID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_PLATEID">the value to be inserted for P_PLATEID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_PATHID">the value to be inserted for P_PATHID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_ZONEID">the value to be inserted for P_ZONEID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_CANDID">the value to be inserted for P_CANDID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_MANUAL">the value to be inserted for P_MANUAL. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_CANDIDATE.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_SCANBACK_CANDIDATE and retrieves them into a new LZ_SCANBACK_CANDIDATE object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_SCANBACK_CANDIDATE class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_CANDIDATE.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_CANDIDATE.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_SCANBACK_DAMAGEDZONE">
            <summary>
            Accesses the LZ_SCANBACK_DAMAGEDZONE table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_DAMAGEDZONE.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_SCANBACK_DAMAGEDZONE. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_DAMAGEDZONE._P_BRICKID">
            <summary>
            Retrieves P_BRICKID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_DAMAGEDZONE._P_PLATEID">
            <summary>
            Retrieves P_PLATEID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_DAMAGEDZONE._P_PATHID">
            <summary>
            Retrieves P_PATHID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_DAMAGEDZONE._P_DAMAGE">
            <summary>
            Retrieves P_DAMAGE for the current row. The return value can be System.DBNull.Value or a value that can be cast to char.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_DAMAGEDZONE.Insert(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_P_BRICKID">the value to be inserted for P_BRICKID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_PLATEID">the value to be inserted for P_PLATEID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_PATHID">the value to be inserted for P_PATHID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_DAMAGE">the value to be inserted for P_DAMAGE. The value for this parameter can be char or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_DAMAGEDZONE.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_SCANBACK_DAMAGEDZONE and retrieves them into a new LZ_SCANBACK_DAMAGEDZONE object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_SCANBACK_DAMAGEDZONE class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_DAMAGEDZONE.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_DAMAGEDZONE.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_SCANBACK_FORK">
            <summary>
            Accesses the LZ_SCANBACK_FORK table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_FORK.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_SCANBACK_FORK. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_FORK._P_BRICKID">
            <summary>
            Retrieves P_BRICKID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_FORK._P_PLATEID">
            <summary>
            Retrieves P_PLATEID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_FORK._P_PATHID">
            <summary>
            Retrieves P_PATHID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_FORK._P_ZONEID">
            <summary>
            Retrieves P_ZONEID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_FORK._P_CANDID">
            <summary>
            Retrieves P_CANDID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_FORK._P_FORKID">
            <summary>
            Retrieves P_FORKID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_FORK.Insert(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_P_BRICKID">the value to be inserted for P_BRICKID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_PLATEID">the value to be inserted for P_PLATEID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_PATHID">the value to be inserted for P_PATHID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_ZONEID">the value to be inserted for P_ZONEID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_CANDID">the value to be inserted for P_CANDID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_FORKID">the value to be inserted for P_FORKID. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_FORK.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_SCANBACK_FORK and retrieves them into a new LZ_SCANBACK_FORK object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_SCANBACK_FORK class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_FORK.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_FORK.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_SCANBACK_NOCANDIDATE">
            <summary>
            Accesses the LZ_SCANBACK_NOCANDIDATE table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_NOCANDIDATE.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_SCANBACK_NOCANDIDATE. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_NOCANDIDATE._P_BRICKID">
            <summary>
            Retrieves P_BRICKID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_NOCANDIDATE._P_PLATEID">
            <summary>
            Retrieves P_PLATEID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_NOCANDIDATE._P_PATHID">
            <summary>
            Retrieves P_PATHID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_NOCANDIDATE._P_ZONEID">
            <summary>
            Retrieves P_ZONEID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_NOCANDIDATE.Insert(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_P_BRICKID">the value to be inserted for P_BRICKID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_PLATEID">the value to be inserted for P_PLATEID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_PATHID">the value to be inserted for P_PATHID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_ZONEID">the value to be inserted for P_ZONEID. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SCANBACK_NOCANDIDATE.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_SCANBACK_NOCANDIDATE and retrieves them into a new LZ_SCANBACK_NOCANDIDATE object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_SCANBACK_NOCANDIDATE class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_NOCANDIDATE.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SCANBACK_NOCANDIDATE.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_SET_VOLUMESLICE_ZONE">
            <summary>
            Accesses the LZ_SET_VOLUMESLICE_ZONE table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SET_VOLUMESLICE_ZONE.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_SET_VOLUMESLICE_ZONE. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SET_VOLUMESLICE_ZONE._P_BRICKID">
            <summary>
            Retrieves P_BRICKID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SET_VOLUMESLICE_ZONE._P_PLATEID">
            <summary>
            Retrieves P_PLATEID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SET_VOLUMESLICE_ZONE._P_VOLID">
            <summary>
            Retrieves P_VOLID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SET_VOLUMESLICE_ZONE._P_ZONEID">
            <summary>
            Retrieves P_ZONEID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SET_VOLUMESLICE_ZONE._P_DAMAGE">
            <summary>
            Retrieves P_DAMAGE for the current row. The return value can be System.DBNull.Value or a value that can be cast to char.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SET_VOLUMESLICE_ZONE.Insert(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_P_BRICKID">the value to be inserted for P_BRICKID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_PLATEID">the value to be inserted for P_PLATEID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_VOLID">the value to be inserted for P_VOLID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_ZONEID">the value to be inserted for P_ZONEID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_P_DAMAGE">the value to be inserted for P_DAMAGE. The value for this parameter can be char or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SET_VOLUMESLICE_ZONE.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_SET_VOLUMESLICE_ZONE and retrieves them into a new LZ_SET_VOLUMESLICE_ZONE object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_SET_VOLUMESLICE_ZONE class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SET_VOLUMESLICE_ZONE.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SET_VOLUMESLICE_ZONE.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_SITEVARS">
            <summary>
            Accesses the LZ_SITEVARS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SITEVARS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_SITEVARS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SITEVARS._NAME">
            <summary>
            Retrieves NAME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SITEVARS._VALUE">
            <summary>
            Retrieves VALUE for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SITEVARS.Insert(System.String,System.String)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_NAME">the value to be inserted for NAME.</param>
            <param name="i_VALUE">the value to be inserted for VALUE.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SITEVARS.SelectPrimaryKey(System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from LZ_SITEVARS and retrieves them into a new LZ_SITEVARS object.
            </summary>
            <param name="i_NAME">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows.</param>
            <returns>a new instance of the LZ_SITEVARS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_SITEVARS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_SITEVARS and retrieves them into a new LZ_SITEVARS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_SITEVARS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SITEVARS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_SITEVARS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_TOKENS">
            <summary>
            Accesses the LZ_TOKENS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_TOKENS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_TOKENS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_TOKENS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_TOKENS._ID_USER">
            <summary>
            Retrieves ID_USER for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_TOKENS._REQUESTSCAN">
            <summary>
            Retrieves REQUESTSCAN for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_TOKENS._REQUESTWEBANALYSIS">
            <summary>
            Retrieves REQUESTWEBANALYSIS for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_TOKENS._REQUESTDATAPROCESSING">
            <summary>
            Retrieves REQUESTDATAPROCESSING for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_TOKENS._REQUESTDATADOWNLOAD">
            <summary>
            Retrieves REQUESTDATADOWNLOAD for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_TOKENS._REQUESTPROCESSSTARTUP">
            <summary>
            Retrieves REQUESTPROCESSSTARTUP for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_TOKENS._ADMINISTER">
            <summary>
            Retrieves ADMINISTER for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_TOKENS._CREATIONTIME">
            <summary>
            Retrieves CREATIONTIME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_TOKENS._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_TOKENS.Insert(System.String,System.Int64,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.Int64)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID">the value to be inserted for ID.</param>
            <param name="i_ID_USER">the value to be inserted for ID_USER.</param>
            <param name="i_REQUESTSCAN">the value to be inserted for REQUESTSCAN.</param>
            <param name="i_REQUESTWEBANALYSIS">the value to be inserted for REQUESTWEBANALYSIS.</param>
            <param name="i_REQUESTDATAPROCESSING">the value to be inserted for REQUESTDATAPROCESSING.</param>
            <param name="i_REQUESTDATADOWNLOAD">the value to be inserted for REQUESTDATADOWNLOAD.</param>
            <param name="i_REQUESTPROCESSSTARTUP">the value to be inserted for REQUESTPROCESSSTARTUP.</param>
            <param name="i_ADMINISTER">the value to be inserted for ADMINISTER.</param>
            <param name="i_CREATIONTIME">the value to be inserted for CREATIONTIME.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_TOKENS.SelectPrimaryKey(System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from LZ_TOKENS and retrieves them into a new LZ_TOKENS object.
            </summary>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PROCESSOPERATION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the LZ_TOKENS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_TOKENS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_TOKENS and retrieves them into a new LZ_TOKENS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_TOKENS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_TOKENS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_TOKENS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_VIEWS">
            <summary>
            Accesses the LZ_VIEWS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_VIEWS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into LZ_VIEWS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_VIEWS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_VIEWS._ID_ZONE">
            <summary>
            Retrieves ID_ZONE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_VIEWS._SIDE">
            <summary>
            Retrieves SIDE for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_VIEWS._ID">
            <summary>
            Retrieves ID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_VIEWS._DOWNZ">
            <summary>
            Retrieves DOWNZ for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_VIEWS._UPZ">
            <summary>
            Retrieves UPZ for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_VIEWS._POSX">
            <summary>
            Retrieves POSX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_VIEWS._POSY">
            <summary>
            Retrieves POSY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_VIEWS.Insert(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_ZONE">the value to be inserted for ID_ZONE. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_SIDE">the value to be inserted for SIDE. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_ID">the value to be inserted for ID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_DOWNZ">the value to be inserted for DOWNZ. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_UPZ">the value to be inserted for UPZ. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_POSX">the value to be inserted for POSX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_POSY">the value to be inserted for POSY. The value for this parameter can be double or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_VIEWS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_VIEWS and retrieves them into a new LZ_VIEWS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_VIEWS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_VIEWS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_VIEWS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LZ_ZONES">
            <summary>
            Accesses the LZ_ZONES table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._ID">
            <summary>
            Retrieves ID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._ID_PLATE">
            <summary>
            Retrieves ID_PLATE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._MINX">
            <summary>
            Retrieves MINX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._MAXX">
            <summary>
            Retrieves MAXX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._MINY">
            <summary>
            Retrieves MINY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._MAXY">
            <summary>
            Retrieves MAXY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._RAWDATAPATH">
            <summary>
            Retrieves RAWDATAPATH for the current row. The return value can be System.DBNull.Value or a value that can be cast to string.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._STARTTIME">
            <summary>
            Retrieves STARTTIME for the current row. The return value can be System.DBNull.Value or a value that can be cast to System.DateTime.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._ENDTIME">
            <summary>
            Retrieves ENDTIME for the current row. The return value can be System.DBNull.Value or a value that can be cast to System.DateTime.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._SERIES">
            <summary>
            Retrieves SERIES for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._TXX">
            <summary>
            Retrieves TXX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._TXY">
            <summary>
            Retrieves TXY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._TYX">
            <summary>
            Retrieves TYX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._TYY">
            <summary>
            Retrieves TYY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._TDX">
            <summary>
            Retrieves TDX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES._TDY">
            <summary>
            Retrieves TDY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_ZONES.Insert(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID">the value to be inserted for ID. The value for this parameter can be long or System.DBNull.Value. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <param name="i_ID_PLATE">the value to be inserted for ID_PLATE. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_MINX">the value to be inserted for MINX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_MAXX">the value to be inserted for MAXX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_MINY">the value to be inserted for MINY. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_MAXY">the value to be inserted for MAXY. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_RAWDATAPATH">the value to be inserted for RAWDATAPATH. The value for this parameter can be string or System.DBNull.Value.</param>
            <param name="i_STARTTIME">the value to be inserted for STARTTIME. The value for this parameter can be System.DateTime or System.DBNull.Value.</param>
            <param name="i_ENDTIME">the value to be inserted for ENDTIME. The value for this parameter can be System.DateTime or System.DBNull.Value.</param>
            <param name="i_SERIES">the value to be inserted for SERIES. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_TXX">the value to be inserted for TXX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_TXY">the value to be inserted for TXY. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_TYX">the value to be inserted for TYX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_TYY">the value to be inserted for TYY. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_TDX">the value to be inserted for TDX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_TDY">the value to be inserted for TDY. The value for this parameter can be double or System.DBNull.Value.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.LZ_ZONES.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from LZ_ZONES and retrieves them into a new LZ_ZONES object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the LZ_ZONES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.LZ_ZONES.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS">
            <summary>
            Accesses the TB_ALIGNED_MIPMICROTRACKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_ALIGNED_MIPMICROTRACKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS._ID_RECONSTRUCTION">
            <summary>
            Retrieves ID_RECONSTRUCTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS._ID_PLATE">
            <summary>
            Retrieves ID_PLATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS._ID_ZONE">
            <summary>
            Retrieves ID_ZONE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS._SIDE">
            <summary>
            Retrieves SIDE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS._POSX">
            <summary>
            Retrieves POSX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS._POSY">
            <summary>
            Retrieves POSY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS._SLOPEX">
            <summary>
            Retrieves SLOPEX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS._SLOPEY">
            <summary>
            Retrieves SLOPEY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS._SIGMA">
            <summary>
            Retrieves SIGMA for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS._GRAINS">
            <summary>
            Retrieves GRAINS for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS._AREASUM">
            <summary>
            Retrieves AREASUM for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS._PH">
            <summary>
            Retrieves PH for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.Int32,System.Int64,System.Double,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_RECONSTRUCTION">the value to be inserted for ID_RECONSTRUCTION.</param>
            <param name="i_ID_PLATE">the value to be inserted for ID_PLATE.</param>
            <param name="i_ID_ZONE">the value to be inserted for ID_ZONE.</param>
            <param name="i_SIDE">the value to be inserted for SIDE.</param>
            <param name="i_ID">the value to be inserted for ID.</param>
            <param name="i_POSX">the value to be inserted for POSX.</param>
            <param name="i_POSY">the value to be inserted for POSY.</param>
            <param name="i_SLOPEX">the value to be inserted for SLOPEX.</param>
            <param name="i_SLOPEY">the value to be inserted for SLOPEY.</param>
            <param name="i_SIGMA">the value to be inserted for SIGMA.</param>
            <param name="i_GRAINS">the value to be inserted for GRAINS. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_AREASUM">the value to be inserted for AREASUM. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_PH">the value to be inserted for PH. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_ALIGNED_MIPMICROTRACKS and retrieves them into a new TB_ALIGNED_MIPMICROTRACKS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_RECONSTRUCTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PLATE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_ZONE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_SIDE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_ALIGNED_MIPMICROTRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_ALIGNED_MIPMICROTRACKS and retrieves them into a new TB_ALIGNED_MIPMICROTRACKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_ALIGNED_MIPMICROTRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_MIPMICROTRACKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_ALIGNED_SIDES">
            <summary>
            Accesses the TB_ALIGNED_SIDES table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ALIGNED_SIDES.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_ALIGNED_SIDES. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SIDES._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SIDES._ID_RECONSTRUCTION">
            <summary>
            Retrieves ID_RECONSTRUCTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SIDES._ID_PLATE">
            <summary>
            Retrieves ID_PLATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SIDES._SIDE">
            <summary>
            Retrieves SIDE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SIDES._DOWNZ">
            <summary>
            Retrieves DOWNZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SIDES._UPZ">
            <summary>
            Retrieves UPZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SIDES._SDX">
            <summary>
            Retrieves SDX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SIDES._SDY">
            <summary>
            Retrieves SDY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SIDES._SMX">
            <summary>
            Retrieves SMX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SIDES._SMY">
            <summary>
            Retrieves SMY for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ALIGNED_SIDES.Insert(System.Int64,System.Int64,System.Int64,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_RECONSTRUCTION">the value to be inserted for ID_RECONSTRUCTION.</param>
            <param name="i_ID_PLATE">the value to be inserted for ID_PLATE.</param>
            <param name="i_SIDE">the value to be inserted for SIDE.</param>
            <param name="i_DOWNZ">the value to be inserted for DOWNZ.</param>
            <param name="i_UPZ">the value to be inserted for UPZ.</param>
            <param name="i_SDX">the value to be inserted for SDX.</param>
            <param name="i_SDY">the value to be inserted for SDY.</param>
            <param name="i_SMX">the value to be inserted for SMX.</param>
            <param name="i_SMY">the value to be inserted for SMY.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ALIGNED_SIDES.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_ALIGNED_SIDES and retrieves them into a new TB_ALIGNED_SIDES object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_RECONSTRUCTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PLATE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_SIDE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_ALIGNED_SIDES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ALIGNED_SIDES.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_ALIGNED_SIDES and retrieves them into a new TB_ALIGNED_SIDES object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_ALIGNED_SIDES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SIDES.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SIDES.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_ALIGNED_SLICES">
            <summary>
            Accesses the TB_ALIGNED_SLICES table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ALIGNED_SLICES.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_ALIGNED_SLICES. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._ID_RECONSTRUCTION">
            <summary>
            Retrieves ID_RECONSTRUCTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._ID_PLATE">
            <summary>
            Retrieves ID_PLATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._MINX">
            <summary>
            Retrieves MINX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._MAXX">
            <summary>
            Retrieves MAXX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._MINY">
            <summary>
            Retrieves MINY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._MAXY">
            <summary>
            Retrieves MAXY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._REFX">
            <summary>
            Retrieves REFX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._REFY">
            <summary>
            Retrieves REFY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._REFZ">
            <summary>
            Retrieves REFZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._DOWNZ">
            <summary>
            Retrieves DOWNZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._UPZ">
            <summary>
            Retrieves UPZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._TXX">
            <summary>
            Retrieves TXX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._TXY">
            <summary>
            Retrieves TXY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._TYX">
            <summary>
            Retrieves TYX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._TYY">
            <summary>
            Retrieves TYY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._TDX">
            <summary>
            Retrieves TDX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._TDY">
            <summary>
            Retrieves TDY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES._TDZ">
            <summary>
            Retrieves TDZ for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ALIGNED_SLICES.Insert(System.Int64,System.Int64,System.Int64,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_RECONSTRUCTION">the value to be inserted for ID_RECONSTRUCTION.</param>
            <param name="i_ID_PLATE">the value to be inserted for ID_PLATE.</param>
            <param name="i_MINX">the value to be inserted for MINX.</param>
            <param name="i_MAXX">the value to be inserted for MAXX.</param>
            <param name="i_MINY">the value to be inserted for MINY.</param>
            <param name="i_MAXY">the value to be inserted for MAXY.</param>
            <param name="i_REFX">the value to be inserted for REFX.</param>
            <param name="i_REFY">the value to be inserted for REFY.</param>
            <param name="i_REFZ">the value to be inserted for REFZ.</param>
            <param name="i_DOWNZ">the value to be inserted for DOWNZ.</param>
            <param name="i_UPZ">the value to be inserted for UPZ.</param>
            <param name="i_TXX">the value to be inserted for TXX.</param>
            <param name="i_TXY">the value to be inserted for TXY.</param>
            <param name="i_TYX">the value to be inserted for TYX.</param>
            <param name="i_TYY">the value to be inserted for TYY.</param>
            <param name="i_TDX">the value to be inserted for TDX.</param>
            <param name="i_TDY">the value to be inserted for TDY.</param>
            <param name="i_TDZ">the value to be inserted for TDZ.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ALIGNED_SLICES.SelectPrimaryKey(System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_ALIGNED_SLICES and retrieves them into a new TB_ALIGNED_SLICES object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_RECONSTRUCTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PLATE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_ALIGNED_SLICES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ALIGNED_SLICES.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_ALIGNED_SLICES and retrieves them into a new TB_ALIGNED_SLICES object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_ALIGNED_SLICES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ALIGNED_SLICES.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_BRICK_SETS">
            <summary>
            Accesses the TB_BRICK_SETS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_BRICK_SETS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_BRICK_SETS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_BRICK_SETS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_BRICK_SETS._IDRANGE_MIN">
            <summary>
            Retrieves IDRANGE_MIN for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_BRICK_SETS._IDRANGE_MAX">
            <summary>
            Retrieves IDRANGE_MAX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_BRICK_SETS._ID_PARTITION">
            <summary>
            Retrieves ID_PARTITION for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_BRICK_SETS.Insert(System.String,System.Int64,System.Int64,System.String)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID">the value to be inserted for ID.</param>
            <param name="i_IDRANGE_MIN">the value to be inserted for IDRANGE_MIN.</param>
            <param name="i_IDRANGE_MAX">the value to be inserted for IDRANGE_MAX.</param>
            <param name="i_ID_PARTITION">the value to be inserted for ID_PARTITION.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_BRICK_SETS.SelectPrimaryKey(System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_BRICK_SETS and retrieves them into a new TB_BRICK_SETS object.
            </summary>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows.</param>
            <returns>a new instance of the TB_BRICK_SETS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_BRICK_SETS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_BRICK_SETS and retrieves them into a new TB_BRICK_SETS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_BRICK_SETS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_BRICK_SETS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_BRICK_SETS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_B_CSCANDS_SBPATHS">
            <summary>
            Accesses the TB_B_CSCANDS_SBPATHS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_CSCANDS_SBPATHS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_B_CSCANDS_SBPATHS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_CSCANDS_SBPATHS._ID_CS_EVENTBRICK">
            <summary>
            Retrieves ID_CS_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_CSCANDS_SBPATHS._ID_CANDIDATE">
            <summary>
            Retrieves ID_CANDIDATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_CSCANDS_SBPATHS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_CSCANDS_SBPATHS._ID_SCANBACK_PROCOPID">
            <summary>
            Retrieves ID_SCANBACK_PROCOPID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_CSCANDS_SBPATHS._PATH">
            <summary>
            Retrieves PATH for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_CSCANDS_SBPATHS.Insert(System.Int64,System.Int64,System.Int64,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_CS_EVENTBRICK">the value to be inserted for ID_CS_EVENTBRICK.</param>
            <param name="i_ID_CANDIDATE">the value to be inserted for ID_CANDIDATE.</param>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_SCANBACK_PROCOPID">the value to be inserted for ID_SCANBACK_PROCOPID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_PATH">the value to be inserted for PATH. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_CSCANDS_SBPATHS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_B_CSCANDS_SBPATHS and retrieves them into a new TB_B_CSCANDS_SBPATHS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_B_CSCANDS_SBPATHS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_CSCANDS_SBPATHS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_CSCANDS_SBPATHS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_B_PREDTRACKS_CSCANDS">
            <summary>
            Accesses the TB_B_PREDTRACKS_CSCANDS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_PREDTRACKS_CSCANDS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_B_PREDTRACKS_CSCANDS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_PREDTRACKS_CSCANDS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_PREDTRACKS_CSCANDS._ID_CANDIDATE">
            <summary>
            Retrieves ID_CANDIDATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_PREDTRACKS_CSCANDS._ID_EVENT">
            <summary>
            Retrieves ID_EVENT for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_PREDTRACKS_CSCANDS._TRACK">
            <summary>
            Retrieves TRACK for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_PREDTRACKS_CSCANDS.Insert(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_CANDIDATE">the value to be inserted for ID_CANDIDATE.</param>
            <param name="i_ID_EVENT">the value to be inserted for ID_EVENT.</param>
            <param name="i_TRACK">the value to be inserted for TRACK.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_PREDTRACKS_CSCANDS.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_B_PREDTRACKS_CSCANDS and retrieves them into a new TB_B_PREDTRACKS_CSCANDS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_CANDIDATE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_EVENT">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_TRACK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_B_PREDTRACKS_CSCANDS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_PREDTRACKS_CSCANDS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_B_PREDTRACKS_CSCANDS and retrieves them into a new TB_B_PREDTRACKS_CSCANDS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_B_PREDTRACKS_CSCANDS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_PREDTRACKS_CSCANDS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_PREDTRACKS_CSCANDS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_B_PREDTRACKS_SBPATHS">
            <summary>
            Accesses the TB_B_PREDTRACKS_SBPATHS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_PREDTRACKS_SBPATHS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_B_PREDTRACKS_SBPATHS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_PREDTRACKS_SBPATHS._ID_EVENT">
            <summary>
            Retrieves ID_EVENT for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_PREDTRACKS_SBPATHS._TRACK">
            <summary>
            Retrieves TRACK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_PREDTRACKS_SBPATHS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_PREDTRACKS_SBPATHS._ID_SCANBACK_PROCOPID">
            <summary>
            Retrieves ID_SCANBACK_PROCOPID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_PREDTRACKS_SBPATHS._PATH">
            <summary>
            Retrieves PATH for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_PREDTRACKS_SBPATHS.Insert(System.Int64,System.Int64,System.Int64,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENT">the value to be inserted for ID_EVENT.</param>
            <param name="i_TRACK">the value to be inserted for TRACK.</param>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_SCANBACK_PROCOPID">the value to be inserted for ID_SCANBACK_PROCOPID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_PATH">the value to be inserted for PATH. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_PREDTRACKS_SBPATHS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_B_PREDTRACKS_SBPATHS and retrieves them into a new TB_B_PREDTRACKS_SBPATHS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_B_PREDTRACKS_SBPATHS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_PREDTRACKS_SBPATHS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_PREDTRACKS_SBPATHS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_B_SBPATHS_SBPATHS">
            <summary>
            Accesses the TB_B_SBPATHS_SBPATHS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_SBPATHS_SBPATHS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_B_SBPATHS_SBPATHS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_SBPATHS._ID_PARENT_EVENTBRICK">
            <summary>
            Retrieves ID_PARENT_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_SBPATHS._ID_PARENT_SB_PROCOPID">
            <summary>
            Retrieves ID_PARENT_SB_PROCOPID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_SBPATHS._PARENT_PATH">
            <summary>
            Retrieves PARENT_PATH for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_SBPATHS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_SBPATHS._ID_SCANBACK_PROCOPID">
            <summary>
            Retrieves ID_SCANBACK_PROCOPID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_SBPATHS._PATH">
            <summary>
            Retrieves PATH for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_SBPATHS_SBPATHS.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_PARENT_EVENTBRICK">the value to be inserted for ID_PARENT_EVENTBRICK.</param>
            <param name="i_ID_PARENT_SB_PROCOPID">the value to be inserted for ID_PARENT_SB_PROCOPID.</param>
            <param name="i_PARENT_PATH">the value to be inserted for PARENT_PATH.</param>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_SCANBACK_PROCOPID">the value to be inserted for ID_SCANBACK_PROCOPID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_PATH">the value to be inserted for PATH. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_SBPATHS_SBPATHS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_B_SBPATHS_SBPATHS and retrieves them into a new TB_B_SBPATHS_SBPATHS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_B_SBPATHS_SBPATHS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_SBPATHS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_SBPATHS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_B_SBPATHS_VOLUMES">
            <summary>
            Accesses the TB_B_SBPATHS_VOLUMES table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_SBPATHS_VOLUMES.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_B_SBPATHS_VOLUMES. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_VOLUMES._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_VOLUMES._ID_SCANBACK_PROCOPID">
            <summary>
            Retrieves ID_SCANBACK_PROCOPID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_VOLUMES._PATH">
            <summary>
            Retrieves PATH for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_VOLUMES._ID_VOLUMESCAN_PROCOPID">
            <summary>
            Retrieves ID_VOLUMESCAN_PROCOPID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_VOLUMES._VOLUME">
            <summary>
            Retrieves VOLUME for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_VOLUMES._ID_PLATE">
            <summary>
            Retrieves ID_PLATE for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_SBPATHS_VOLUMES.Insert(System.Int64,System.Int64,System.Int64,System.Object,System.Object,System.Int64)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_SCANBACK_PROCOPID">the value to be inserted for ID_SCANBACK_PROCOPID.</param>
            <param name="i_PATH">the value to be inserted for PATH.</param>
            <param name="i_ID_VOLUMESCAN_PROCOPID">the value to be inserted for ID_VOLUMESCAN_PROCOPID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_VOLUME">the value to be inserted for VOLUME. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_PLATE">the value to be inserted for ID_PLATE.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_SBPATHS_VOLUMES.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_B_SBPATHS_VOLUMES and retrieves them into a new TB_B_SBPATHS_VOLUMES object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_B_SBPATHS_VOLUMES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_VOLUMES.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_SBPATHS_VOLUMES.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_B_VOLTKS_SBPATHS">
            <summary>
            Accesses the TB_B_VOLTKS_SBPATHS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_VOLTKS_SBPATHS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_B_VOLTKS_SBPATHS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_VOLTKS_SBPATHS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_VOLTKS_SBPATHS._ID_RECONSTRUCTION">
            <summary>
            Retrieves ID_RECONSTRUCTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_VOLTKS_SBPATHS._ID_OPTION">
            <summary>
            Retrieves ID_OPTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_VOLTKS_SBPATHS._ID_VOLUMETRACK">
            <summary>
            Retrieves ID_VOLUMETRACK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_VOLTKS_SBPATHS._EXTENT">
            <summary>
            Retrieves EXTENT for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_VOLTKS_SBPATHS._ID_SCANBACK_PROCOPID">
            <summary>
            Retrieves ID_SCANBACK_PROCOPID for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_VOLTKS_SBPATHS._PATH">
            <summary>
            Retrieves PATH for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_VOLTKS_SBPATHS.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.String,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_RECONSTRUCTION">the value to be inserted for ID_RECONSTRUCTION.</param>
            <param name="i_ID_OPTION">the value to be inserted for ID_OPTION.</param>
            <param name="i_ID_VOLUMETRACK">the value to be inserted for ID_VOLUMETRACK.</param>
            <param name="i_EXTENT">the value to be inserted for EXTENT.</param>
            <param name="i_ID_SCANBACK_PROCOPID">the value to be inserted for ID_SCANBACK_PROCOPID. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_PATH">the value to be inserted for PATH. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_B_VOLTKS_SBPATHS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_B_VOLTKS_SBPATHS and retrieves them into a new TB_B_VOLTKS_SBPATHS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_B_VOLTKS_SBPATHS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_VOLTKS_SBPATHS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_B_VOLTKS_SBPATHS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_CS_CANDIDATES">
            <summary>
            Accesses the TB_CS_CANDIDATES table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATES._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATES._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATES._ID_EVENT">
            <summary>
            Retrieves ID_EVENT for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATES._CANDIDATE">
            <summary>
            Retrieves CANDIDATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATES._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_CS_CANDIDATES.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
            <param name="i_ID_EVENT">the value to be inserted for ID_EVENT.</param>
            <param name="i_CANDIDATE">the value to be inserted for CANDIDATE.</param>
            <param name="i_ID">the value to be inserted for ID. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_CS_CANDIDATES.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_CS_CANDIDATES and retrieves them into a new TB_CS_CANDIDATES object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PROCESSOPERATION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_EVENT">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_CANDIDATE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_CS_CANDIDATES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_CS_CANDIDATES.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_CS_CANDIDATES and retrieves them into a new TB_CS_CANDIDATES object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_CS_CANDIDATES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATES.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATES.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS">
            <summary>
            Accesses the TB_CS_CANDIDATE_CHECKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_CS_CANDIDATE_CHECKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS._ID_CANDIDATE">
            <summary>
            Retrieves ID_CANDIDATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS._ID_ZONE">
            <summary>
            Retrieves ID_ZONE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS._SIDE">
            <summary>
            Retrieves SIDE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS._GRAINS">
            <summary>
            Retrieves GRAINS for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS._POSX">
            <summary>
            Retrieves POSX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS._POSY">
            <summary>
            Retrieves POSY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS._SLOPEX">
            <summary>
            Retrieves SLOPEX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS._SLOPEY">
            <summary>
            Retrieves SLOPEY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_CANDIDATE">the value to be inserted for ID_CANDIDATE.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
            <param name="i_ID_ZONE">the value to be inserted for ID_ZONE.</param>
            <param name="i_SIDE">the value to be inserted for SIDE.</param>
            <param name="i_GRAINS">the value to be inserted for GRAINS. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_POSX">the value to be inserted for POSX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_POSY">the value to be inserted for POSY. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_SLOPEX">the value to be inserted for SLOPEX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_SLOPEY">the value to be inserted for SLOPEY. The value for this parameter can be double or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_CS_CANDIDATE_CHECKS and retrieves them into a new TB_CS_CANDIDATE_CHECKS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_CANDIDATE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PROCESSOPERATION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_ZONE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_SIDE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_CS_CANDIDATE_CHECKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_CS_CANDIDATE_CHECKS and retrieves them into a new TB_CS_CANDIDATE_CHECKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_CS_CANDIDATE_CHECKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_CHECKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_CS_CANDIDATE_TRACKS">
            <summary>
            Accesses the TB_CS_CANDIDATE_TRACKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_CS_CANDIDATE_TRACKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_CS_CANDIDATE_TRACKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_TRACKS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_TRACKS._ID_CANDIDATE">
            <summary>
            Retrieves ID_CANDIDATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_TRACKS._ID_ZONE">
            <summary>
            Retrieves ID_ZONE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_TRACKS._SIDE">
            <summary>
            Retrieves SIDE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_TRACKS._ID_MICROTRACK">
            <summary>
            Retrieves ID_MICROTRACK for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_CS_CANDIDATE_TRACKS.Insert(System.Int64,System.Int64,System.Int64,System.Int32,System.Int64)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_CANDIDATE">the value to be inserted for ID_CANDIDATE.</param>
            <param name="i_ID_ZONE">the value to be inserted for ID_ZONE.</param>
            <param name="i_SIDE">the value to be inserted for SIDE.</param>
            <param name="i_ID_MICROTRACK">the value to be inserted for ID_MICROTRACK.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_CS_CANDIDATE_TRACKS.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_CS_CANDIDATE_TRACKS and retrieves them into a new TB_CS_CANDIDATE_TRACKS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_CANDIDATE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_ZONE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_SIDE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_CS_CANDIDATE_TRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_CS_CANDIDATE_TRACKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_CS_CANDIDATE_TRACKS and retrieves them into a new TB_CS_CANDIDATE_TRACKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_CS_CANDIDATE_TRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_TRACKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_CS_CANDIDATE_TRACKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_EVENTBRICKS">
            <summary>
            Accesses the TB_EVENTBRICKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_EVENTBRICKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_EVENTBRICKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_EVENTBRICKS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_EVENTBRICKS._MINX">
            <summary>
            Retrieves MINX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_EVENTBRICKS._MAXX">
            <summary>
            Retrieves MAXX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_EVENTBRICKS._MINY">
            <summary>
            Retrieves MINY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_EVENTBRICKS._MAXY">
            <summary>
            Retrieves MAXY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_EVENTBRICKS._MINZ">
            <summary>
            Retrieves MINZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_EVENTBRICKS._MAXZ">
            <summary>
            Retrieves MAXZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_EVENTBRICKS._ID_SET">
            <summary>
            Retrieves ID_SET for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_EVENTBRICKS._ID_BRICK">
            <summary>
            Retrieves ID_BRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_EVENTBRICKS._ZEROX">
            <summary>
            Retrieves ZEROX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_EVENTBRICKS._ZEROY">
            <summary>
            Retrieves ZEROY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_EVENTBRICKS._ZEROZ">
            <summary>
            Retrieves ZEROZ for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_EVENTBRICKS.Insert(System.Int64,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.String,System.Int64,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID">the value to be inserted for ID.</param>
            <param name="i_MINX">the value to be inserted for MINX.</param>
            <param name="i_MAXX">the value to be inserted for MAXX.</param>
            <param name="i_MINY">the value to be inserted for MINY.</param>
            <param name="i_MAXY">the value to be inserted for MAXY.</param>
            <param name="i_MINZ">the value to be inserted for MINZ.</param>
            <param name="i_MAXZ">the value to be inserted for MAXZ.</param>
            <param name="i_ID_SET">the value to be inserted for ID_SET.</param>
            <param name="i_ID_BRICK">the value to be inserted for ID_BRICK.</param>
            <param name="i_ZEROX">the value to be inserted for ZEROX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_ZEROY">the value to be inserted for ZEROY. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_ZEROZ">the value to be inserted for ZEROZ. The value for this parameter can be double or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_EVENTBRICKS.SelectPrimaryKey(System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_EVENTBRICKS and retrieves them into a new TB_EVENTBRICKS object.
            </summary>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows.</param>
            <returns>a new instance of the TB_EVENTBRICKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_EVENTBRICKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_EVENTBRICKS and retrieves them into a new TB_EVENTBRICKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_EVENTBRICKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_EVENTBRICKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_EVENTBRICKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_GRAINS">
            <summary>
            Accesses the TB_GRAINS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_GRAINS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_GRAINS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_GRAINS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_GRAINS._ID_ZONE">
            <summary>
            Retrieves ID_ZONE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_GRAINS._SIDE">
            <summary>
            Retrieves SIDE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_GRAINS._ID_MIPMICROTRACK">
            <summary>
            Retrieves ID_MIPMICROTRACK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_GRAINS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_GRAINS._X">
            <summary>
            Retrieves X for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_GRAINS._Y">
            <summary>
            Retrieves Y for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_GRAINS._Z">
            <summary>
            Retrieves Z for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_GRAINS._AREA">
            <summary>
            Retrieves AREA for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_GRAINS._DARKNESS">
            <summary>
            Retrieves DARKNESS for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_GRAINS.Insert(System.Int64,System.Int64,System.Int32,System.Int64,System.Int64,System.Double,System.Double,System.Double,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_ZONE">the value to be inserted for ID_ZONE.</param>
            <param name="i_SIDE">the value to be inserted for SIDE.</param>
            <param name="i_ID_MIPMICROTRACK">the value to be inserted for ID_MIPMICROTRACK.</param>
            <param name="i_ID">the value to be inserted for ID.</param>
            <param name="i_X">the value to be inserted for X.</param>
            <param name="i_Y">the value to be inserted for Y.</param>
            <param name="i_Z">the value to be inserted for Z.</param>
            <param name="i_AREA">the value to be inserted for AREA. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_DARKNESS">the value to be inserted for DARKNESS. The value for this parameter can be double or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_GRAINS.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_GRAINS and retrieves them into a new TB_GRAINS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_ZONE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_SIDE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_MIPMICROTRACK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_GRAINS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_GRAINS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_GRAINS and retrieves them into a new TB_GRAINS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_GRAINS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_GRAINS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_GRAINS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_MACHINES">
            <summary>
            Accesses the TB_MACHINES table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MACHINES._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MACHINES._ID_SITE">
            <summary>
            Retrieves ID_SITE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MACHINES._NAME">
            <summary>
            Retrieves NAME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MACHINES._ADDRESS">
            <summary>
            Retrieves ADDRESS for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MACHINES._ISSCANNINGSERVER">
            <summary>
            Retrieves ISSCANNINGSERVER for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MACHINES._ISBATCHSERVER">
            <summary>
            Retrieves ISBATCHSERVER for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MACHINES._ISDATAPROCESSINGSERVER">
            <summary>
            Retrieves ISDATAPROCESSINGSERVER for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MACHINES._ISWEBSERVER">
            <summary>
            Retrieves ISWEBSERVER for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MACHINES._ISDATABASESERVER">
            <summary>
            Retrieves ISDATABASESERVER for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_MACHINES.Insert(System.Int64,System.Int64,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_ID">the value to be inserted for ID. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <param name="i_ID_SITE">the value to be inserted for ID_SITE.</param>
            <param name="i_NAME">the value to be inserted for NAME.</param>
            <param name="i_ADDRESS">the value to be inserted for ADDRESS.</param>
            <param name="i_ISSCANNINGSERVER">the value to be inserted for ISSCANNINGSERVER.</param>
            <param name="i_ISBATCHSERVER">the value to be inserted for ISBATCHSERVER.</param>
            <param name="i_ISDATAPROCESSINGSERVER">the value to be inserted for ISDATAPROCESSINGSERVER.</param>
            <param name="i_ISWEBSERVER">the value to be inserted for ISWEBSERVER.</param>
            <param name="i_ISDATABASESERVER">the value to be inserted for ISDATABASESERVER.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_MACHINES.SelectPrimaryKey(System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_MACHINES and retrieves them into a new TB_MACHINES object.
            </summary>
            <param name="i_NAME">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows.</param>
            <returns>a new instance of the TB_MACHINES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_MACHINES.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_MACHINES and retrieves them into a new TB_MACHINES object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_MACHINES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MACHINES.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MACHINES.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_MIPBASETRACKS">
            <summary>
            Accesses the TB_MIPBASETRACKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_MIPBASETRACKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_MIPBASETRACKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._ID_ZONE">
            <summary>
            Retrieves ID_ZONE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._POSX">
            <summary>
            Retrieves POSX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._POSY">
            <summary>
            Retrieves POSY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._SLOPEX">
            <summary>
            Retrieves SLOPEX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._SLOPEY">
            <summary>
            Retrieves SLOPEY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._GRAINS">
            <summary>
            Retrieves GRAINS for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._AREASUM">
            <summary>
            Retrieves AREASUM for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._PH">
            <summary>
            Retrieves PH for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._SIGMA">
            <summary>
            Retrieves SIGMA for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._ID_DOWNSIDE">
            <summary>
            Retrieves ID_DOWNSIDE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._ID_DOWNTRACK">
            <summary>
            Retrieves ID_DOWNTRACK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._ID_UPSIDE">
            <summary>
            Retrieves ID_UPSIDE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS._ID_UPTRACK">
            <summary>
            Retrieves ID_UPTRACK for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_MIPBASETRACKS.Insert(System.Int64,System.Int64,System.Int64,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object,System.Object,System.Double,System.Int32,System.Int64,System.Int32,System.Int64)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_ZONE">the value to be inserted for ID_ZONE.</param>
            <param name="i_ID">the value to be inserted for ID.</param>
            <param name="i_POSX">the value to be inserted for POSX.</param>
            <param name="i_POSY">the value to be inserted for POSY.</param>
            <param name="i_SLOPEX">the value to be inserted for SLOPEX.</param>
            <param name="i_SLOPEY">the value to be inserted for SLOPEY.</param>
            <param name="i_GRAINS">the value to be inserted for GRAINS. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_AREASUM">the value to be inserted for AREASUM. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_PH">the value to be inserted for PH. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_SIGMA">the value to be inserted for SIGMA.</param>
            <param name="i_ID_DOWNSIDE">the value to be inserted for ID_DOWNSIDE.</param>
            <param name="i_ID_DOWNTRACK">the value to be inserted for ID_DOWNTRACK.</param>
            <param name="i_ID_UPSIDE">the value to be inserted for ID_UPSIDE.</param>
            <param name="i_ID_UPTRACK">the value to be inserted for ID_UPTRACK.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_MIPBASETRACKS.SelectPrimaryKey(System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_MIPBASETRACKS and retrieves them into a new TB_MIPBASETRACKS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_ZONE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_MIPBASETRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_MIPBASETRACKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_MIPBASETRACKS and retrieves them into a new TB_MIPBASETRACKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_MIPBASETRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPBASETRACKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_MIPMICROTRACKS">
            <summary>
            Accesses the TB_MIPMICROTRACKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_MIPMICROTRACKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_MIPMICROTRACKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS._ID_ZONE">
            <summary>
            Retrieves ID_ZONE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS._SIDE">
            <summary>
            Retrieves SIDE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS._POSX">
            <summary>
            Retrieves POSX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS._POSY">
            <summary>
            Retrieves POSY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS._SLOPEX">
            <summary>
            Retrieves SLOPEX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS._SLOPEY">
            <summary>
            Retrieves SLOPEY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS._GRAINS">
            <summary>
            Retrieves GRAINS for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS._AREASUM">
            <summary>
            Retrieves AREASUM for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS._PH">
            <summary>
            Retrieves PH for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS._SIGMA">
            <summary>
            Retrieves SIGMA for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS._ID_VIEW">
            <summary>
            Retrieves ID_VIEW for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_MIPMICROTRACKS.Insert(System.Int64,System.Int64,System.Int32,System.Int64,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object,System.Object,System.Double,System.Int64)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_ZONE">the value to be inserted for ID_ZONE.</param>
            <param name="i_SIDE">the value to be inserted for SIDE.</param>
            <param name="i_ID">the value to be inserted for ID.</param>
            <param name="i_POSX">the value to be inserted for POSX.</param>
            <param name="i_POSY">the value to be inserted for POSY.</param>
            <param name="i_SLOPEX">the value to be inserted for SLOPEX.</param>
            <param name="i_SLOPEY">the value to be inserted for SLOPEY.</param>
            <param name="i_GRAINS">the value to be inserted for GRAINS. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_AREASUM">the value to be inserted for AREASUM. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_PH">the value to be inserted for PH. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_SIGMA">the value to be inserted for SIGMA.</param>
            <param name="i_ID_VIEW">the value to be inserted for ID_VIEW.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_MIPMICROTRACKS.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_MIPMICROTRACKS and retrieves them into a new TB_MIPMICROTRACKS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_ZONE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_SIDE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_MIPMICROTRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_MIPMICROTRACKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_MIPMICROTRACKS and retrieves them into a new TB_MIPMICROTRACKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_MIPMICROTRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_MIPMICROTRACKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PACKAGED_SW">
            <summary>
            Accesses the TB_PACKAGED_SW table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PACKAGED_SW.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_PACKAGED_SW. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PACKAGED_SW._PACKAGE_NAME">
            <summary>
            Retrieves PACKAGE_NAME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PACKAGED_SW._MAJOR_VERSION">
            <summary>
            Retrieves MAJOR_VERSION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PACKAGED_SW._MINOR_VERSION">
            <summary>
            Retrieves MINOR_VERSION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PACKAGED_SW._EDITION">
            <summary>
            Retrieves EDITION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PACKAGED_SW._SUBDIRECTORY">
            <summary>
            Retrieves SUBDIRECTORY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PACKAGED_SW._COMMAND_SHARP_">
            <summary>
            Retrieves COMMAND# for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PACKAGED_SW._COMMAND_TEXT">
            <summary>
            Retrieves COMMAND_TEXT for the current row. The return value can be System.DBNull.Value or a value that can be cast to string.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PACKAGED_SW._COMPONENT_NAME">
            <summary>
            Retrieves COMPONENT_NAME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PACKAGED_SW._IMAGE">
            <summary>
            Retrieves IMAGE for the current row. The return value can be System.DBNull.Value or a value that can be cast to byte [].
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PACKAGED_SW.Insert(System.String,System.Int64,System.Int64,System.Int64,System.String,System.Int64,System.Object,System.String,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_PACKAGE_NAME">the value to be inserted for PACKAGE_NAME.</param>
            <param name="i_MAJOR_VERSION">the value to be inserted for MAJOR_VERSION.</param>
            <param name="i_MINOR_VERSION">the value to be inserted for MINOR_VERSION.</param>
            <param name="i_EDITION">the value to be inserted for EDITION.</param>
            <param name="i_SUBDIRECTORY">the value to be inserted for SUBDIRECTORY.</param>
            <param name="i_COMMAND_SHARP_">the value to be inserted for COMMAND#.</param>
            <param name="i_COMMAND_TEXT">the value to be inserted for COMMAND_TEXT. The value for this parameter can be string or System.DBNull.Value.</param>
            <param name="i_COMPONENT_NAME">the value to be inserted for COMPONENT_NAME.</param>
            <param name="i_IMAGE">the value to be inserted for IMAGE. The value for this parameter can be byte [] or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PACKAGED_SW.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PACKAGED_SW and retrieves them into a new TB_PACKAGED_SW object.
            </summary>
            <param name="i_PACKAGE_NAME">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_MAJOR_VERSION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_MINOR_VERSION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_EDITION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_SUBDIRECTORY">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_COMMAND_SHARP_">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_COMPONENT_NAME">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PACKAGED_SW class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PACKAGED_SW.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PACKAGED_SW and retrieves them into a new TB_PACKAGED_SW object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PACKAGED_SW class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PACKAGED_SW.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PACKAGED_SW.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PATTERN_MATCH">
            <summary>
            Accesses the TB_PATTERN_MATCH table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PATTERN_MATCH.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_PATTERN_MATCH. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PATTERN_MATCH._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PATTERN_MATCH._ID_FIRSTZONE">
            <summary>
            Retrieves ID_FIRSTZONE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PATTERN_MATCH._ID_SECONDZONE">
            <summary>
            Retrieves ID_SECONDZONE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PATTERN_MATCH._ID_INFIRSTZONE">
            <summary>
            Retrieves ID_INFIRSTZONE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PATTERN_MATCH._ID_INSECONDZONE">
            <summary>
            Retrieves ID_INSECONDZONE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PATTERN_MATCH._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PATTERN_MATCH.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_FIRSTZONE">the value to be inserted for ID_FIRSTZONE.</param>
            <param name="i_ID_SECONDZONE">the value to be inserted for ID_SECONDZONE.</param>
            <param name="i_ID_INFIRSTZONE">the value to be inserted for ID_INFIRSTZONE.</param>
            <param name="i_ID_INSECONDZONE">the value to be inserted for ID_INSECONDZONE.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PATTERN_MATCH.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PATTERN_MATCH and retrieves them into a new TB_PATTERN_MATCH object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_FIRSTZONE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_SECONDZONE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_INFIRSTZONE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_INSECONDZONE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PROCESSOPERATION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PATTERN_MATCH class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PATTERN_MATCH.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PATTERN_MATCH and retrieves them into a new TB_PATTERN_MATCH object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PATTERN_MATCH class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PATTERN_MATCH.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PATTERN_MATCH.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN">
            <summary>
            Accesses the TB_PEANUT_BRICKALIGN table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_PEANUT_BRICKALIGN. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._TDX">
            <summary>
            Retrieves TDX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._TDY">
            <summary>
            Retrieves TDY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._TDZ">
            <summary>
            Retrieves TDZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._SDX">
            <summary>
            Retrieves SDX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._SDY">
            <summary>
            Retrieves SDY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._TXX">
            <summary>
            Retrieves TXX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._TXY">
            <summary>
            Retrieves TXY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._TYX">
            <summary>
            Retrieves TYX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._TYY">
            <summary>
            Retrieves TYY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._SIGMAPOSX">
            <summary>
            Retrieves SIGMAPOSX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._SIGMAPOSY">
            <summary>
            Retrieves SIGMAPOSY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._SIGMASLOPEX">
            <summary>
            Retrieves SIGMASLOPEX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN._SIGMASLOPEY">
            <summary>
            Retrieves SIGMASLOPEY for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN.Insert(System.Int64,System.Int64,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
            <param name="i_TDX">the value to be inserted for TDX.</param>
            <param name="i_TDY">the value to be inserted for TDY.</param>
            <param name="i_TDZ">the value to be inserted for TDZ.</param>
            <param name="i_SDX">the value to be inserted for SDX.</param>
            <param name="i_SDY">the value to be inserted for SDY.</param>
            <param name="i_TXX">the value to be inserted for TXX.</param>
            <param name="i_TXY">the value to be inserted for TXY.</param>
            <param name="i_TYX">the value to be inserted for TYX.</param>
            <param name="i_TYY">the value to be inserted for TYY.</param>
            <param name="i_SIGMAPOSX">the value to be inserted for SIGMAPOSX.</param>
            <param name="i_SIGMAPOSY">the value to be inserted for SIGMAPOSY.</param>
            <param name="i_SIGMASLOPEX">the value to be inserted for SIGMASLOPEX.</param>
            <param name="i_SIGMASLOPEY">the value to be inserted for SIGMASLOPEY.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN.SelectPrimaryKey(System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PEANUT_BRICKALIGN and retrieves them into a new TB_PEANUT_BRICKALIGN object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PROCESSOPERATION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PEANUT_BRICKALIGN class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PEANUT_BRICKALIGN and retrieves them into a new TB_PEANUT_BRICKALIGN object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PEANUT_BRICKALIGN class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKALIGN.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO">
            <summary>
            Accesses the TB_PEANUT_BRICKINFO table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_PEANUT_BRICKINFO. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO._EXPOSURESTART">
            <summary>
            Retrieves EXPOSURESTART for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO._EXPOSUREFINISH">
            <summary>
            Retrieves EXPOSUREFINISH for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO._POSITIONCODE">
            <summary>
            Retrieves POSITIONCODE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO._COSMICHOURS">
            <summary>
            Retrieves COSMICHOURS for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO._ID_SITE">
            <summary>
            Retrieves ID_SITE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO._LABORATORY">
            <summary>
            Retrieves LABORATORY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO._NOTES">
            <summary>
            Retrieves NOTES for the current row. The return value can be System.DBNull.Value or a value that can be cast to string.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO._POT">
            <summary>
            Retrieves POT for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO.Insert(System.Int64,System.DateTime,System.DateTime,System.Int64,System.Object,System.Object,System.String,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_EXPOSURESTART">the value to be inserted for EXPOSURESTART.</param>
            <param name="i_EXPOSUREFINISH">the value to be inserted for EXPOSUREFINISH.</param>
            <param name="i_POSITIONCODE">the value to be inserted for POSITIONCODE.</param>
            <param name="i_COSMICHOURS">the value to be inserted for COSMICHOURS. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_ID_SITE">the value to be inserted for ID_SITE. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_LABORATORY">the value to be inserted for LABORATORY.</param>
            <param name="i_NOTES">the value to be inserted for NOTES. The value for this parameter can be string or System.DBNull.Value.</param>
            <param name="i_POT">the value to be inserted for POT. The value for this parameter can be double or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO.SelectPrimaryKey(System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PEANUT_BRICKINFO and retrieves them into a new TB_PEANUT_BRICKINFO object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows.</param>
            <returns>a new instance of the TB_PEANUT_BRICKINFO class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PEANUT_BRICKINFO and retrieves them into a new TB_PEANUT_BRICKINFO object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PEANUT_BRICKINFO class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_BRICKINFO.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PEANUT_HITS">
            <summary>
            Accesses the TB_PEANUT_HITS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_HITS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_PEANUT_HITS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_HITS._ID_EVENT">
            <summary>
            Retrieves ID_EVENT for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_HITS._PLANE_ID">
            <summary>
            Retrieves PLANE_ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_HITS._HIT_ID">
            <summary>
            Retrieves HIT_ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_HITS._TCOORD">
            <summary>
            Retrieves TCOORD for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_HITS._Z">
            <summary>
            Retrieves Z for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_HITS._BRIGHTNESS">
            <summary>
            Retrieves BRIGHTNESS for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_HITS._CCDX">
            <summary>
            Retrieves CCDX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_HITS._CCDY">
            <summary>
            Retrieves CCDY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_HITS._PROJ_ID">
            <summary>
            Retrieves PROJ_ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_HITS._II_CHAIN_ID">
            <summary>
            Retrieves II_CHAIN_ID for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_HITS.Insert(System.Int64,System.Int32,System.Int64,System.Double,System.Double,System.Double,System.Double,System.Double,System.Char,System.Char)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENT">the value to be inserted for ID_EVENT.</param>
            <param name="i_PLANE_ID">the value to be inserted for PLANE_ID.</param>
            <param name="i_HIT_ID">the value to be inserted for HIT_ID.</param>
            <param name="i_TCOORD">the value to be inserted for TCOORD.</param>
            <param name="i_Z">the value to be inserted for Z.</param>
            <param name="i_BRIGHTNESS">the value to be inserted for BRIGHTNESS.</param>
            <param name="i_CCDX">the value to be inserted for CCDX.</param>
            <param name="i_CCDY">the value to be inserted for CCDY.</param>
            <param name="i_PROJ_ID">the value to be inserted for PROJ_ID.</param>
            <param name="i_II_CHAIN_ID">the value to be inserted for II_CHAIN_ID.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_HITS.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PEANUT_HITS and retrieves them into a new TB_PEANUT_HITS object.
            </summary>
            <param name="i_ID_EVENT">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_PLANE_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_HIT_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_PROJ_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PEANUT_HITS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_HITS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PEANUT_HITS and retrieves them into a new TB_PEANUT_HITS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PEANUT_HITS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_HITS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_HITS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKBRICKS">
            <summary>
            Accesses the TB_PEANUT_PREDTRACKBRICKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKBRICKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_PEANUT_PREDTRACKBRICKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKBRICKS._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKBRICKS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKBRICKS._ID_EVENT">
            <summary>
            Retrieves ID_EVENT for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKBRICKS._TRACK">
            <summary>
            Retrieves TRACK for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKBRICKS.Insert(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_EVENT">the value to be inserted for ID_EVENT.</param>
            <param name="i_TRACK">the value to be inserted for TRACK.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKBRICKS.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PEANUT_PREDTRACKBRICKS and retrieves them into a new TB_PEANUT_PREDTRACKBRICKS object.
            </summary>
            <param name="i_ID_PROCESSOPERATION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_EVENT">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_TRACK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PEANUT_PREDTRACKBRICKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKBRICKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PEANUT_PREDTRACKBRICKS and retrieves them into a new TB_PEANUT_PREDTRACKBRICKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PEANUT_PREDTRACKBRICKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKBRICKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKBRICKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS">
            <summary>
            Accesses the TB_PEANUT_PREDTRACKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_PEANUT_PREDTRACKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS._ID_EVENT">
            <summary>
            Retrieves ID_EVENT for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS._PROJ_ID">
            <summary>
            Retrieves PROJ_ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS._TRACK_ID">
            <summary>
            Retrieves TRACK_ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS._TRK_ID_X">
            <summary>
            Retrieves TRK_ID_X for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS._TRK_ID_Y">
            <summary>
            Retrieves TRK_ID_Y for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS._ACOORD">
            <summary>
            Retrieves ACOORD for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS._BCOORD">
            <summary>
            Retrieves BCOORD for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS._NHITS">
            <summary>
            Retrieves NHITS for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS._PLANE_X">
            <summary>
            Retrieves PLANE_X for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS._PLANE_Y">
            <summary>
            Retrieves PLANE_Y for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS.Insert(System.Int64,System.Char,System.Int64,System.Object,System.Object,System.Double,System.Double,System.Object,System.Char,System.Char)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENT">the value to be inserted for ID_EVENT.</param>
            <param name="i_PROJ_ID">the value to be inserted for PROJ_ID.</param>
            <param name="i_TRACK_ID">the value to be inserted for TRACK_ID.</param>
            <param name="i_TRK_ID_X">the value to be inserted for TRK_ID_X. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_TRK_ID_Y">the value to be inserted for TRK_ID_Y. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ACOORD">the value to be inserted for ACOORD.</param>
            <param name="i_BCOORD">the value to be inserted for BCOORD.</param>
            <param name="i_NHITS">the value to be inserted for NHITS. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_PLANE_X">the value to be inserted for PLANE_X.</param>
            <param name="i_PLANE_Y">the value to be inserted for PLANE_Y.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS.SelectPrimaryKey(System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PEANUT_PREDTRACKS and retrieves them into a new TB_PEANUT_PREDTRACKS object.
            </summary>
            <param name="i_ID_EVENT">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_PROJ_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_TRACK_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PEANUT_PREDTRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PEANUT_PREDTRACKS and retrieves them into a new TB_PEANUT_PREDTRACKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PEANUT_PREDTRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_PREDTRACKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PEANUT_TRACKHITLINKS">
            <summary>
            Accesses the TB_PEANUT_TRACKHITLINKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_TRACKHITLINKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_PEANUT_TRACKHITLINKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_TRACKHITLINKS._ID_EVENT">
            <summary>
            Retrieves ID_EVENT for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_TRACKHITLINKS._PROJ_ID">
            <summary>
            Retrieves PROJ_ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_TRACKHITLINKS._TRACK_ID">
            <summary>
            Retrieves TRACK_ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_TRACKHITLINKS._PLANE_ID">
            <summary>
            Retrieves PLANE_ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_TRACKHITLINKS._HIT_ID">
            <summary>
            Retrieves HIT_ID for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_TRACKHITLINKS.Insert(System.Int64,System.Char,System.Int64,System.Int64,System.Int64)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENT">the value to be inserted for ID_EVENT.</param>
            <param name="i_PROJ_ID">the value to be inserted for PROJ_ID.</param>
            <param name="i_TRACK_ID">the value to be inserted for TRACK_ID.</param>
            <param name="i_PLANE_ID">the value to be inserted for PLANE_ID.</param>
            <param name="i_HIT_ID">the value to be inserted for HIT_ID.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_TRACKHITLINKS.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PEANUT_TRACKHITLINKS and retrieves them into a new TB_PEANUT_TRACKHITLINKS object.
            </summary>
            <param name="i_ID_EVENT">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_PROJ_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_TRACK_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_PLANE_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_HIT_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PEANUT_TRACKHITLINKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PEANUT_TRACKHITLINKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PEANUT_TRACKHITLINKS and retrieves them into a new TB_PEANUT_TRACKHITLINKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PEANUT_TRACKHITLINKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_TRACKHITLINKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PEANUT_TRACKHITLINKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PLATES">
            <summary>
            Accesses the TB_PLATES table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PLATES.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_PLATES. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATES._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATES._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATES._Z">
            <summary>
            Retrieves Z for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PLATES.Insert(System.Int64,System.Int64,System.Double)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID">the value to be inserted for ID.</param>
            <param name="i_Z">the value to be inserted for Z.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PLATES.SelectPrimaryKey(System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PLATES and retrieves them into a new TB_PLATES object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PLATES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PLATES.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PLATES and retrieves them into a new TB_PLATES object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PLATES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATES.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATES.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS">
            <summary>
            Accesses the TB_PLATE_CALIBRATIONS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_PLATE_CALIBRATIONS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS._ID_PLATE">
            <summary>
            Retrieves ID_PLATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS._Z">
            <summary>
            Retrieves Z for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS._MAPXX">
            <summary>
            Retrieves MAPXX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS._MAPXY">
            <summary>
            Retrieves MAPXY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS._MAPYX">
            <summary>
            Retrieves MAPYX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS._MAPYY">
            <summary>
            Retrieves MAPYY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS._MAPDX">
            <summary>
            Retrieves MAPDX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS._MAPDY">
            <summary>
            Retrieves MAPDY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS._MARKSETS">
            <summary>
            Retrieves MARKSETS for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS.Insert(System.Int64,System.Int64,System.Int64,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_PLATE">the value to be inserted for ID_PLATE.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
            <param name="i_Z">the value to be inserted for Z.</param>
            <param name="i_MAPXX">the value to be inserted for MAPXX.</param>
            <param name="i_MAPXY">the value to be inserted for MAPXY.</param>
            <param name="i_MAPYX">the value to be inserted for MAPYX.</param>
            <param name="i_MAPYY">the value to be inserted for MAPYY.</param>
            <param name="i_MAPDX">the value to be inserted for MAPDX.</param>
            <param name="i_MAPDY">the value to be inserted for MAPDY.</param>
            <param name="i_MARKSETS">the value to be inserted for MARKSETS.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS.SelectPrimaryKey(System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PLATE_CALIBRATIONS and retrieves them into a new TB_PLATE_CALIBRATIONS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PLATE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PROCESSOPERATION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PLATE_CALIBRATIONS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PLATE_CALIBRATIONS and retrieves them into a new TB_PLATE_CALIBRATIONS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PLATE_CALIBRATIONS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_CALIBRATIONS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PLATE_DAMAGENOTICES">
            <summary>
            Accesses the TB_PLATE_DAMAGENOTICES table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PLATE_DAMAGENOTICES.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_PLATE_DAMAGENOTICES. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_DAMAGENOTICES._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_DAMAGENOTICES._ID_PLATE">
            <summary>
            Retrieves ID_PLATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_DAMAGENOTICES._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_DAMAGENOTICES._DETECTIONTIME">
            <summary>
            Retrieves DETECTIONTIME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_DAMAGENOTICES._DAMAGED">
            <summary>
            Retrieves DAMAGED for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PLATE_DAMAGENOTICES.Insert(System.Int64,System.Int64,System.Int64,System.DateTime,System.Char)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_PLATE">the value to be inserted for ID_PLATE.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
            <param name="i_DETECTIONTIME">the value to be inserted for DETECTIONTIME.</param>
            <param name="i_DAMAGED">the value to be inserted for DAMAGED.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PLATE_DAMAGENOTICES.SelectPrimaryKey(System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PLATE_DAMAGENOTICES and retrieves them into a new TB_PLATE_DAMAGENOTICES object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PLATE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PROCESSOPERATION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PLATE_DAMAGENOTICES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PLATE_DAMAGENOTICES.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PLATE_DAMAGENOTICES and retrieves them into a new TB_PLATE_DAMAGENOTICES object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PLATE_DAMAGENOTICES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_DAMAGENOTICES.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PLATE_DAMAGENOTICES.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PREDICTED_BRICKS">
            <summary>
            Accesses the TB_PREDICTED_BRICKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PREDICTED_BRICKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_PREDICTED_BRICKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_BRICKS._ID_EVENT">
            <summary>
            Retrieves ID_EVENT for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_BRICKS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_BRICKS._PROBABILITY">
            <summary>
            Retrieves PROBABILITY for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PREDICTED_BRICKS.Insert(System.Int64,System.Int64,System.Double)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENT">the value to be inserted for ID_EVENT.</param>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_PROBABILITY">the value to be inserted for PROBABILITY.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PREDICTED_BRICKS.SelectPrimaryKey(System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PREDICTED_BRICKS and retrieves them into a new TB_PREDICTED_BRICKS object.
            </summary>
            <param name="i_ID_EVENT">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PREDICTED_BRICKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PREDICTED_BRICKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PREDICTED_BRICKS and retrieves them into a new TB_PREDICTED_BRICKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PREDICTED_BRICKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_BRICKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_BRICKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PREDICTED_EVENTS">
            <summary>
            Accesses the TB_PREDICTED_EVENTS table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_EVENTS._EVENT">
            <summary>
            Retrieves EVENT for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_EVENTS._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_EVENTS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_EVENTS._POSX">
            <summary>
            Retrieves POSX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_EVENTS._POSY">
            <summary>
            Retrieves POSY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_EVENTS._POSZ">
            <summary>
            Retrieves POSZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_EVENTS._TYPE">
            <summary>
            Retrieves TYPE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_EVENTS._TIME">
            <summary>
            Retrieves TIME for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PREDICTED_EVENTS.Insert(System.Int64,System.Int64,System.Int64,System.Double,System.Double,System.Double,System.String,System.DateTime)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_EVENT">the value to be inserted for EVENT.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
            <param name="i_ID">the value to be inserted for ID. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <param name="i_POSX">the value to be inserted for POSX.</param>
            <param name="i_POSY">the value to be inserted for POSY.</param>
            <param name="i_POSZ">the value to be inserted for POSZ.</param>
            <param name="i_TYPE">the value to be inserted for TYPE.</param>
            <param name="i_TIME">the value to be inserted for TIME.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PREDICTED_EVENTS.SelectPrimaryKey(System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PREDICTED_EVENTS and retrieves them into a new TB_PREDICTED_EVENTS object.
            </summary>
            <param name="i_EVENT">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PROCESSOPERATION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PREDICTED_EVENTS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PREDICTED_EVENTS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PREDICTED_EVENTS and retrieves them into a new TB_PREDICTED_EVENTS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PREDICTED_EVENTS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_EVENTS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_EVENTS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS">
            <summary>
            Accesses the TB_PREDICTED_TRACKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_PREDICTED_TRACKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS._ID_EVENT">
            <summary>
            Retrieves ID_EVENT for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS._TRACK">
            <summary>
            Retrieves TRACK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS._POSZ">
            <summary>
            Retrieves POSZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS._POSX">
            <summary>
            Retrieves POSX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS._POSY">
            <summary>
            Retrieves POSY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS._SLOPEX">
            <summary>
            Retrieves SLOPEX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS._SLOPEY">
            <summary>
            Retrieves SLOPEY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS._FRAME">
            <summary>
            Retrieves FRAME for the current row. The return value can be System.DBNull.Value or a value that can be cast to char.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS._POSTOL1">
            <summary>
            Retrieves POSTOL1 for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS._POSTOL2">
            <summary>
            Retrieves POSTOL2 for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS._SLOPETOL1">
            <summary>
            Retrieves SLOPETOL1 for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS._SLOPETOL2">
            <summary>
            Retrieves SLOPETOL2 for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS.Insert(System.Int64,System.Int64,System.Double,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENT">the value to be inserted for ID_EVENT.</param>
            <param name="i_TRACK">the value to be inserted for TRACK.</param>
            <param name="i_POSZ">the value to be inserted for POSZ.</param>
            <param name="i_POSX">the value to be inserted for POSX.</param>
            <param name="i_POSY">the value to be inserted for POSY.</param>
            <param name="i_SLOPEX">the value to be inserted for SLOPEX.</param>
            <param name="i_SLOPEY">the value to be inserted for SLOPEY.</param>
            <param name="i_FRAME">the value to be inserted for FRAME. The value for this parameter can be char or System.DBNull.Value.</param>
            <param name="i_POSTOL1">the value to be inserted for POSTOL1. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_POSTOL2">the value to be inserted for POSTOL2. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_SLOPETOL1">the value to be inserted for SLOPETOL1. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_SLOPETOL2">the value to be inserted for SLOPETOL2. The value for this parameter can be double or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS.SelectPrimaryKey(System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PREDICTED_TRACKS and retrieves them into a new TB_PREDICTED_TRACKS object.
            </summary>
            <param name="i_ID_EVENT">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_TRACK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PREDICTED_TRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PREDICTED_TRACKS and retrieves them into a new TB_PREDICTED_TRACKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PREDICTED_TRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PREDICTED_TRACKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PRIVILEGES">
            <summary>
            Accesses the TB_PRIVILEGES table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PRIVILEGES.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_PRIVILEGES. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PRIVILEGES._ID_USER">
            <summary>
            Retrieves ID_USER for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PRIVILEGES._ID_SITE">
            <summary>
            Retrieves ID_SITE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PRIVILEGES._REQUESTSCAN">
            <summary>
            Retrieves REQUESTSCAN for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PRIVILEGES._REQUESTWEBANALYSIS">
            <summary>
            Retrieves REQUESTWEBANALYSIS for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PRIVILEGES._REQUESTDATAPROCESSING">
            <summary>
            Retrieves REQUESTDATAPROCESSING for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PRIVILEGES._REQUESTDATADOWNLOAD">
            <summary>
            Retrieves REQUESTDATADOWNLOAD for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PRIVILEGES._REQUESTPROCESSSTARTUP">
            <summary>
            Retrieves REQUESTPROCESSSTARTUP for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PRIVILEGES._ADMINISTER">
            <summary>
            Retrieves ADMINISTER for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PRIVILEGES.Insert(System.Int64,System.Int64,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_USER">the value to be inserted for ID_USER.</param>
            <param name="i_ID_SITE">the value to be inserted for ID_SITE.</param>
            <param name="i_REQUESTSCAN">the value to be inserted for REQUESTSCAN.</param>
            <param name="i_REQUESTWEBANALYSIS">the value to be inserted for REQUESTWEBANALYSIS.</param>
            <param name="i_REQUESTDATAPROCESSING">the value to be inserted for REQUESTDATAPROCESSING.</param>
            <param name="i_REQUESTDATADOWNLOAD">the value to be inserted for REQUESTDATADOWNLOAD.</param>
            <param name="i_REQUESTPROCESSSTARTUP">the value to be inserted for REQUESTPROCESSSTARTUP.</param>
            <param name="i_ADMINISTER">the value to be inserted for ADMINISTER.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PRIVILEGES.SelectPrimaryKey(System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PRIVILEGES and retrieves them into a new TB_PRIVILEGES object.
            </summary>
            <param name="i_ID_USER">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_SITE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PRIVILEGES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PRIVILEGES.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PRIVILEGES and retrieves them into a new TB_PRIVILEGES object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PRIVILEGES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PRIVILEGES.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PRIVILEGES.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PROC_OPERATIONS">
            <summary>
            Accesses the TB_PROC_OPERATIONS table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS._ID_MACHINE">
            <summary>
            Retrieves ID_MACHINE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS._ID_PROGRAMSETTINGS">
            <summary>
            Retrieves ID_PROGRAMSETTINGS for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS._ID_REQUESTER">
            <summary>
            Retrieves ID_REQUESTER for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS._ID_PARENT_OPERATION">
            <summary>
            Retrieves ID_PARENT_OPERATION for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS._ID_PLATE">
            <summary>
            Retrieves ID_PLATE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS._DRIVERLEVEL">
            <summary>
            Retrieves DRIVERLEVEL for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS._ID_CALIBRATION_OPERATION">
            <summary>
            Retrieves ID_CALIBRATION_OPERATION for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS._STARTTIME">
            <summary>
            Retrieves STARTTIME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS._FINISHTIME">
            <summary>
            Retrieves FINISHTIME for the current row. The return value can be System.DBNull.Value or a value that can be cast to System.DateTime.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS._SUCCESS">
            <summary>
            Retrieves SUCCESS for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS._NOTES">
            <summary>
            Retrieves NOTES for the current row. The return value can be System.DBNull.Value or a value that can be cast to string.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PROC_OPERATIONS.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.Object,System.Object,System.Object,System.Int32,System.Object,System.DateTime,System.Object,System.Char,System.Object)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_ID">the value to be inserted for ID. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <param name="i_ID_MACHINE">the value to be inserted for ID_MACHINE.</param>
            <param name="i_ID_PROGRAMSETTINGS">the value to be inserted for ID_PROGRAMSETTINGS.</param>
            <param name="i_ID_REQUESTER">the value to be inserted for ID_REQUESTER.</param>
            <param name="i_ID_PARENT_OPERATION">the value to be inserted for ID_PARENT_OPERATION. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_PLATE">the value to be inserted for ID_PLATE. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_DRIVERLEVEL">the value to be inserted for DRIVERLEVEL.</param>
            <param name="i_ID_CALIBRATION_OPERATION">the value to be inserted for ID_CALIBRATION_OPERATION. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_STARTTIME">the value to be inserted for STARTTIME.</param>
            <param name="i_FINISHTIME">the value to be inserted for FINISHTIME. The value for this parameter can be System.DateTime or System.DBNull.Value.</param>
            <param name="i_SUCCESS">the value to be inserted for SUCCESS.</param>
            <param name="i_NOTES">the value to be inserted for NOTES. The value for this parameter can be string or System.DBNull.Value.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PROC_OPERATIONS.SelectPrimaryKey(System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PROC_OPERATIONS and retrieves them into a new TB_PROC_OPERATIONS object.
            </summary>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows.</param>
            <returns>a new instance of the TB_PROC_OPERATIONS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PROC_OPERATIONS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PROC_OPERATIONS and retrieves them into a new TB_PROC_OPERATIONS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PROC_OPERATIONS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROC_OPERATIONS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_PROGRAMSETTINGS">
            <summary>
            Accesses the TB_PROGRAMSETTINGS table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROGRAMSETTINGS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROGRAMSETTINGS._DESCRIPTION">
            <summary>
            Retrieves DESCRIPTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROGRAMSETTINGS._EXECUTABLE">
            <summary>
            Retrieves EXECUTABLE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROGRAMSETTINGS._SETTINGS">
            <summary>
            Retrieves SETTINGS for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROGRAMSETTINGS._ID_AUTHOR">
            <summary>
            Retrieves ID_AUTHOR for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROGRAMSETTINGS._DRIVERLEVEL">
            <summary>
            Retrieves DRIVERLEVEL for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROGRAMSETTINGS._TEMPLATEMARKS">
            <summary>
            Retrieves TEMPLATEMARKS for the current row. The return value can be System.DBNull.Value or a value that can be cast to int.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROGRAMSETTINGS._MARKSET">
            <summary>
            Retrieves MARKSET for the current row. The return value can be System.DBNull.Value or a value that can be cast to string.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PROGRAMSETTINGS.Insert(System.Int64,System.String,System.String,System.String,System.Int64,System.Int32,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_ID">the value to be inserted for ID. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <param name="i_DESCRIPTION">the value to be inserted for DESCRIPTION.</param>
            <param name="i_EXECUTABLE">the value to be inserted for EXECUTABLE.</param>
            <param name="i_SETTINGS">the value to be inserted for SETTINGS.</param>
            <param name="i_ID_AUTHOR">the value to be inserted for ID_AUTHOR.</param>
            <param name="i_DRIVERLEVEL">the value to be inserted for DRIVERLEVEL.</param>
            <param name="i_TEMPLATEMARKS">the value to be inserted for TEMPLATEMARKS. The value for this parameter can be int or System.DBNull.Value.</param>
            <param name="i_MARKSET">the value to be inserted for MARKSET. The value for this parameter can be string or System.DBNull.Value.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PROGRAMSETTINGS.SelectPrimaryKey(System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_PROGRAMSETTINGS and retrieves them into a new TB_PROGRAMSETTINGS object.
            </summary>
            <param name="i_DESCRIPTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_EXECUTABLE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_PROGRAMSETTINGS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_PROGRAMSETTINGS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_PROGRAMSETTINGS and retrieves them into a new TB_PROGRAMSETTINGS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_PROGRAMSETTINGS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROGRAMSETTINGS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_PROGRAMSETTINGS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_RECONSTRUCTIONS">
            <summary>
            Accesses the TB_RECONSTRUCTIONS table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTIONS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTIONS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTIONS._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_RECONSTRUCTIONS.Insert(System.Int64,System.Int64,System.Int64)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID">the value to be inserted for ID. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_RECONSTRUCTIONS.SelectPrimaryKey(System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_RECONSTRUCTIONS and retrieves them into a new TB_RECONSTRUCTIONS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_RECONSTRUCTIONS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_RECONSTRUCTIONS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_RECONSTRUCTIONS and retrieves them into a new TB_RECONSTRUCTIONS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_RECONSTRUCTIONS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTIONS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTIONS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_RECONSTRUCTION_LISTS">
            <summary>
            Accesses the TB_RECONSTRUCTION_LISTS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_RECONSTRUCTION_LISTS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_RECONSTRUCTION_LISTS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_LISTS._ID_SET">
            <summary>
            Retrieves ID_SET for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_LISTS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_LISTS._ID_RECONSTRUCTION">
            <summary>
            Retrieves ID_RECONSTRUCTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_LISTS._ID_OPTION">
            <summary>
            Retrieves ID_OPTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_LISTS._NOTES">
            <summary>
            Retrieves NOTES for the current row. The return value can be System.DBNull.Value or a value that can be cast to string.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_RECONSTRUCTION_LISTS.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_SET">the value to be inserted for ID_SET.</param>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_RECONSTRUCTION">the value to be inserted for ID_RECONSTRUCTION.</param>
            <param name="i_ID_OPTION">the value to be inserted for ID_OPTION.</param>
            <param name="i_NOTES">the value to be inserted for NOTES. The value for this parameter can be string or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_RECONSTRUCTION_LISTS.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_RECONSTRUCTION_LISTS and retrieves them into a new TB_RECONSTRUCTION_LISTS object.
            </summary>
            <param name="i_ID_SET">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_RECONSTRUCTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_OPTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_RECONSTRUCTION_LISTS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_RECONSTRUCTION_LISTS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_RECONSTRUCTION_LISTS and retrieves them into a new TB_RECONSTRUCTION_LISTS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_RECONSTRUCTION_LISTS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_LISTS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_LISTS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_RECONSTRUCTION_OPTIONS">
            <summary>
            Accesses the TB_RECONSTRUCTION_OPTIONS table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_OPTIONS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_OPTIONS._ID_RECONSTRUCTION">
            <summary>
            Retrieves ID_RECONSTRUCTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_OPTIONS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_OPTIONS._GEOMETRICAL_PROBABILITY">
            <summary>
            Retrieves GEOMETRICAL_PROBABILITY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_OPTIONS._PHYSICAL_PROBABILITY">
            <summary>
            Retrieves PHYSICAL_PROBABILITY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_RECONSTRUCTION_OPTIONS.Insert(System.Int64,System.Int64,System.Int64,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_RECONSTRUCTION">the value to be inserted for ID_RECONSTRUCTION.</param>
            <param name="i_ID">the value to be inserted for ID. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <param name="i_GEOMETRICAL_PROBABILITY">the value to be inserted for GEOMETRICAL_PROBABILITY. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_PHYSICAL_PROBABILITY">the value to be inserted for PHYSICAL_PROBABILITY. The value for this parameter can be double or System.DBNull.Value.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_RECONSTRUCTION_OPTIONS.SelectPrimaryKey(System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_RECONSTRUCTION_OPTIONS and retrieves them into a new TB_RECONSTRUCTION_OPTIONS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_RECONSTRUCTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_RECONSTRUCTION_OPTIONS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_RECONSTRUCTION_OPTIONS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_RECONSTRUCTION_OPTIONS and retrieves them into a new TB_RECONSTRUCTION_OPTIONS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_RECONSTRUCTION_OPTIONS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_OPTIONS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_OPTIONS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_RECONSTRUCTION_SETS">
            <summary>
            Accesses the TB_RECONSTRUCTION_SETS table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_SETS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_SETS._RELEASETIME">
            <summary>
            Retrieves RELEASETIME for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_RECONSTRUCTION_SETS.Insert(System.Int64,System.DateTime)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_ID">the value to be inserted for ID. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <param name="i_RELEASETIME">the value to be inserted for RELEASETIME.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_RECONSTRUCTION_SETS.SelectPrimaryKey(System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_RECONSTRUCTION_SETS and retrieves them into a new TB_RECONSTRUCTION_SETS object.
            </summary>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows.</param>
            <returns>a new instance of the TB_RECONSTRUCTION_SETS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_RECONSTRUCTION_SETS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_RECONSTRUCTION_SETS and retrieves them into a new TB_RECONSTRUCTION_SETS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_RECONSTRUCTION_SETS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_SETS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_RECONSTRUCTION_SETS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_SCANBACK_CHECKRESULTS">
            <summary>
            Accesses the TB_SCANBACK_CHECKRESULTS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_SCANBACK_CHECKRESULTS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_SCANBACK_CHECKRESULTS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_CHECKRESULTS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_CHECKRESULTS._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_CHECKRESULTS._ID_PATH">
            <summary>
            Retrieves ID_PATH for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_CHECKRESULTS._ID_PLATE">
            <summary>
            Retrieves ID_PLATE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_CHECKRESULTS._RESULT">
            <summary>
            Retrieves RESULT for the current row. The return value can be System.DBNull.Value or a value that can be cast to string.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_SCANBACK_CHECKRESULTS.Insert(System.Int64,System.Int64,System.Int64,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
            <param name="i_ID_PATH">the value to be inserted for ID_PATH.</param>
            <param name="i_ID_PLATE">the value to be inserted for ID_PLATE. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_RESULT">the value to be inserted for RESULT. The value for this parameter can be string or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_SCANBACK_CHECKRESULTS.SelectPrimaryKey(System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_SCANBACK_CHECKRESULTS and retrieves them into a new TB_SCANBACK_CHECKRESULTS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PROCESSOPERATION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PATH">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_SCANBACK_CHECKRESULTS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_SCANBACK_CHECKRESULTS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_SCANBACK_CHECKRESULTS and retrieves them into a new TB_SCANBACK_CHECKRESULTS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_SCANBACK_CHECKRESULTS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_CHECKRESULTS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_CHECKRESULTS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_SCANBACK_PATHS">
            <summary>
            Accesses the TB_SCANBACK_PATHS table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PATHS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PATHS._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PATHS._PATH">
            <summary>
            Retrieves PATH for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PATHS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PATHS._ID_START_PLATE">
            <summary>
            Retrieves ID_START_PLATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PATHS._ID_FORK_PATH">
            <summary>
            Retrieves ID_FORK_PATH for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PATHS._ID_CANCEL_PLATE">
            <summary>
            Retrieves ID_CANCEL_PLATE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_SCANBACK_PATHS.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
            <param name="i_PATH">the value to be inserted for PATH.</param>
            <param name="i_ID">the value to be inserted for ID. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <param name="i_ID_START_PLATE">the value to be inserted for ID_START_PLATE.</param>
            <param name="i_ID_FORK_PATH">the value to be inserted for ID_FORK_PATH. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_CANCEL_PLATE">the value to be inserted for ID_CANCEL_PLATE. The value for this parameter can be long or System.DBNull.Value.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_SCANBACK_PATHS.SelectPrimaryKey(System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_SCANBACK_PATHS and retrieves them into a new TB_SCANBACK_PATHS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PROCESSOPERATION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_PATH">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_SCANBACK_PATHS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_SCANBACK_PATHS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_SCANBACK_PATHS and retrieves them into a new TB_SCANBACK_PATHS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_SCANBACK_PATHS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PATHS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PATHS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS">
            <summary>
            Accesses the TB_SCANBACK_PREDICTIONS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_SCANBACK_PREDICTIONS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._ID_PATH">
            <summary>
            Retrieves ID_PATH for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._ID_PLATE">
            <summary>
            Retrieves ID_PLATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._POSX">
            <summary>
            Retrieves POSX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._POSY">
            <summary>
            Retrieves POSY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._SLOPEX">
            <summary>
            Retrieves SLOPEX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._SLOPEY">
            <summary>
            Retrieves SLOPEY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._POSTOL1">
            <summary>
            Retrieves POSTOL1 for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._POSTOL2">
            <summary>
            Retrieves POSTOL2 for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._SLOPETOL1">
            <summary>
            Retrieves SLOPETOL1 for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._SLOPETOL2">
            <summary>
            Retrieves SLOPETOL2 for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._FRAME">
            <summary>
            Retrieves FRAME for the current row. The return value can be System.DBNull.Value or a value that can be cast to char.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._ID_ZONE">
            <summary>
            Retrieves ID_ZONE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._ID_CANDIDATE">
            <summary>
            Retrieves ID_CANDIDATE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._DAMAGED">
            <summary>
            Retrieves DAMAGED for the current row. The return value can be System.DBNull.Value or a value that can be cast to char.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS._ISMANUAL">
            <summary>
            Retrieves ISMANUAL for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS.Insert(System.Int64,System.Int64,System.Int64,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_PATH">the value to be inserted for ID_PATH.</param>
            <param name="i_ID_PLATE">the value to be inserted for ID_PLATE.</param>
            <param name="i_POSX">the value to be inserted for POSX.</param>
            <param name="i_POSY">the value to be inserted for POSY.</param>
            <param name="i_SLOPEX">the value to be inserted for SLOPEX.</param>
            <param name="i_SLOPEY">the value to be inserted for SLOPEY.</param>
            <param name="i_POSTOL1">the value to be inserted for POSTOL1. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_POSTOL2">the value to be inserted for POSTOL2. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_SLOPETOL1">the value to be inserted for SLOPETOL1. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_SLOPETOL2">the value to be inserted for SLOPETOL2. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_FRAME">the value to be inserted for FRAME. The value for this parameter can be char or System.DBNull.Value.</param>
            <param name="i_ID_ZONE">the value to be inserted for ID_ZONE. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_CANDIDATE">the value to be inserted for ID_CANDIDATE. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_DAMAGED">the value to be inserted for DAMAGED. The value for this parameter can be char or System.DBNull.Value.</param>
            <param name="i_ISMANUAL">the value to be inserted for ISMANUAL. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS.SelectPrimaryKey(System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_SCANBACK_PREDICTIONS and retrieves them into a new TB_SCANBACK_PREDICTIONS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PATH">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PLATE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_SCANBACK_PREDICTIONS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_SCANBACK_PREDICTIONS and retrieves them into a new TB_SCANBACK_PREDICTIONS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_SCANBACK_PREDICTIONS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SCANBACK_PREDICTIONS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_SITES">
            <summary>
            Accesses the TB_SITES table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SITES._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SITES._NAME">
            <summary>
            Retrieves NAME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SITES._LATITUDE">
            <summary>
            Retrieves LATITUDE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SITES._LONGITUDE">
            <summary>
            Retrieves LONGITUDE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SITES._LOCALTIMEFUSE">
            <summary>
            Retrieves LOCALTIMEFUSE for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_SITES.Insert(System.Int64,System.String,System.Double,System.Double,System.Int32)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_ID">the value to be inserted for ID. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <param name="i_NAME">the value to be inserted for NAME.</param>
            <param name="i_LATITUDE">the value to be inserted for LATITUDE.</param>
            <param name="i_LONGITUDE">the value to be inserted for LONGITUDE.</param>
            <param name="i_LOCALTIMEFUSE">the value to be inserted for LOCALTIMEFUSE.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_SITES.SelectPrimaryKey(System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_SITES and retrieves them into a new TB_SITES object.
            </summary>
            <param name="i_NAME">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows.</param>
            <returns>a new instance of the TB_SITES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_SITES.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_SITES and retrieves them into a new TB_SITES object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_SITES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SITES.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_SITES.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS">
            <summary>
            Accesses the TB_TEMPLATEMARKSETS table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS._ID_MARK">
            <summary>
            Retrieves ID_MARK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS._POSX">
            <summary>
            Retrieves POSX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS._POSY">
            <summary>
            Retrieves POSY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS._MARKROW">
            <summary>
            Retrieves MARKROW for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS._MARKCOL">
            <summary>
            Retrieves MARKCOL for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS._SHAPE">
            <summary>
            Retrieves SHAPE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS._SIDE">
            <summary>
            Retrieves SIDE for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS.Insert(System.Int64,System.Int64,System.Int64,System.Double,System.Double,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_ID">the value to be inserted for ID. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_MARK">the value to be inserted for ID_MARK.</param>
            <param name="i_POSX">the value to be inserted for POSX.</param>
            <param name="i_POSY">the value to be inserted for POSY.</param>
            <param name="i_MARKROW">the value to be inserted for MARKROW.</param>
            <param name="i_MARKCOL">the value to be inserted for MARKCOL.</param>
            <param name="i_SHAPE">the value to be inserted for SHAPE.</param>
            <param name="i_SIDE">the value to be inserted for SIDE.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_TEMPLATEMARKSETS and retrieves them into a new TB_TEMPLATEMARKSETS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_MARK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_MARKROW">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_MARKCOL">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_TEMPLATEMARKSETS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_TEMPLATEMARKSETS and retrieves them into a new TB_TEMPLATEMARKSETS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_TEMPLATEMARKSETS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_TEMPLATEMARKSETS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_USERS">
            <summary>
            Accesses the TB_USERS table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_USERS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_USERS._USERNAME">
            <summary>
            Retrieves USERNAME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_USERS._PWD">
            <summary>
            Retrieves PWD for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_USERS._NAME">
            <summary>
            Retrieves NAME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_USERS._SURNAME">
            <summary>
            Retrieves SURNAME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_USERS._INSTITUTION">
            <summary>
            Retrieves INSTITUTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_USERS._ID_SITE">
            <summary>
            Retrieves ID_SITE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_USERS._EMAIL">
            <summary>
            Retrieves EMAIL for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_USERS._ADDRESS">
            <summary>
            Retrieves ADDRESS for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_USERS._PHONE">
            <summary>
            Retrieves PHONE for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_USERS.Insert(System.Int64,System.String,System.String,System.String,System.String,System.String,System.Int64,System.String,System.String,System.String)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_ID">the value to be inserted for ID. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <param name="i_USERNAME">the value to be inserted for USERNAME.</param>
            <param name="i_PWD">the value to be inserted for PWD.</param>
            <param name="i_NAME">the value to be inserted for NAME.</param>
            <param name="i_SURNAME">the value to be inserted for SURNAME.</param>
            <param name="i_INSTITUTION">the value to be inserted for INSTITUTION.</param>
            <param name="i_ID_SITE">the value to be inserted for ID_SITE.</param>
            <param name="i_EMAIL">the value to be inserted for EMAIL.</param>
            <param name="i_ADDRESS">the value to be inserted for ADDRESS.</param>
            <param name="i_PHONE">the value to be inserted for PHONE.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_USERS.SelectPrimaryKey(System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_USERS and retrieves them into a new TB_USERS object.
            </summary>
            <param name="i_NAME">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_SURNAME">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_USERS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_USERS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_USERS and retrieves them into a new TB_USERS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_USERS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_USERS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_USERS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_VERTICES">
            <summary>
            Accesses the TB_VERTICES table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VERTICES.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_VERTICES. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES._ID_RECONSTRUCTION">
            <summary>
            Retrieves ID_RECONSTRUCTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES._ID_OPTION">
            <summary>
            Retrieves ID_OPTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VERTICES.Insert(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_RECONSTRUCTION">the value to be inserted for ID_RECONSTRUCTION.</param>
            <param name="i_ID_OPTION">the value to be inserted for ID_OPTION.</param>
            <param name="i_ID">the value to be inserted for ID.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VERTICES.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_VERTICES and retrieves them into a new TB_VERTICES object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_RECONSTRUCTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_OPTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_VERTICES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VERTICES.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_VERTICES and retrieves them into a new TB_VERTICES object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_VERTICES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_VERTICES_ATTR">
            <summary>
            Accesses the TB_VERTICES_ATTR table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VERTICES_ATTR.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_VERTICES_ATTR. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_ATTR._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_ATTR._ID_RECONSTRUCTION">
            <summary>
            Retrieves ID_RECONSTRUCTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_ATTR._ID_OPTION">
            <summary>
            Retrieves ID_OPTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_ATTR._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_ATTR._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_ATTR._NAME">
            <summary>
            Retrieves NAME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_ATTR._VALUE">
            <summary>
            Retrieves VALUE for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VERTICES_ATTR.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.String,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_RECONSTRUCTION">the value to be inserted for ID_RECONSTRUCTION.</param>
            <param name="i_ID_OPTION">the value to be inserted for ID_OPTION.</param>
            <param name="i_ID">the value to be inserted for ID.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
            <param name="i_NAME">the value to be inserted for NAME.</param>
            <param name="i_VALUE">the value to be inserted for VALUE. The value for this parameter can be double or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VERTICES_ATTR.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_VERTICES_ATTR and retrieves them into a new TB_VERTICES_ATTR object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_RECONSTRUCTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_OPTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PROCESSOPERATION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_NAME">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_VERTICES_ATTR class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VERTICES_ATTR.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_VERTICES_ATTR and retrieves them into a new TB_VERTICES_ATTR object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_VERTICES_ATTR class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_ATTR.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_ATTR.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_VERTICES_FIT">
            <summary>
            Accesses the TB_VERTICES_FIT table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VERTICES_FIT.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_VERTICES_FIT. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_FIT._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_FIT._ID_RECONSTRUCTION">
            <summary>
            Retrieves ID_RECONSTRUCTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_FIT._ID_OPTION">
            <summary>
            Retrieves ID_OPTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_FIT._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_FIT._TYPE">
            <summary>
            Retrieves TYPE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_FIT._POSX">
            <summary>
            Retrieves POSX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_FIT._POSY">
            <summary>
            Retrieves POSY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_FIT._POSZ">
            <summary>
            Retrieves POSZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_FIT._QUALITY">
            <summary>
            Retrieves QUALITY for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VERTICES_FIT.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_RECONSTRUCTION">the value to be inserted for ID_RECONSTRUCTION.</param>
            <param name="i_ID_OPTION">the value to be inserted for ID_OPTION.</param>
            <param name="i_ID">the value to be inserted for ID.</param>
            <param name="i_TYPE">the value to be inserted for TYPE.</param>
            <param name="i_POSX">the value to be inserted for POSX.</param>
            <param name="i_POSY">the value to be inserted for POSY.</param>
            <param name="i_POSZ">the value to be inserted for POSZ.</param>
            <param name="i_QUALITY">the value to be inserted for QUALITY.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VERTICES_FIT.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_VERTICES_FIT and retrieves them into a new TB_VERTICES_FIT object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_RECONSTRUCTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_OPTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_TYPE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_VERTICES_FIT class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VERTICES_FIT.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_VERTICES_FIT and retrieves them into a new TB_VERTICES_FIT object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_VERTICES_FIT class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_FIT.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VERTICES_FIT.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_VIEWS">
            <summary>
            Accesses the TB_VIEWS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VIEWS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_VIEWS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VIEWS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VIEWS._ID_ZONE">
            <summary>
            Retrieves ID_ZONE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VIEWS._SIDE">
            <summary>
            Retrieves SIDE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VIEWS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VIEWS._DOWNZ">
            <summary>
            Retrieves DOWNZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VIEWS._UPZ">
            <summary>
            Retrieves UPZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VIEWS._POSX">
            <summary>
            Retrieves POSX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VIEWS._POSY">
            <summary>
            Retrieves POSY for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VIEWS.Insert(System.Int64,System.Int64,System.Int32,System.Int64,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_ZONE">the value to be inserted for ID_ZONE.</param>
            <param name="i_SIDE">the value to be inserted for SIDE.</param>
            <param name="i_ID">the value to be inserted for ID.</param>
            <param name="i_DOWNZ">the value to be inserted for DOWNZ.</param>
            <param name="i_UPZ">the value to be inserted for UPZ.</param>
            <param name="i_POSX">the value to be inserted for POSX.</param>
            <param name="i_POSY">the value to be inserted for POSY.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VIEWS.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_VIEWS and retrieves them into a new TB_VIEWS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_ZONE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_SIDE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_VIEWS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VIEWS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_VIEWS and retrieves them into a new TB_VIEWS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_VIEWS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VIEWS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VIEWS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS">
            <summary>
            Accesses the TB_VOLTKS_ALIGNMUTKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_VOLTKS_ALIGNMUTKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS._ID_RECONSTRUCTION">
            <summary>
            Retrieves ID_RECONSTRUCTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS._ID_OPTION">
            <summary>
            Retrieves ID_OPTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS._ID_PLATE">
            <summary>
            Retrieves ID_PLATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS._ID_ZONE">
            <summary>
            Retrieves ID_ZONE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS._SIDE">
            <summary>
            Retrieves SIDE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS._ID_MIPMICROTRACK">
            <summary>
            Retrieves ID_MIPMICROTRACK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS._ID_VOLUMETRACK">
            <summary>
            Retrieves ID_VOLUMETRACK for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int32,System.Int64,System.Int64)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_RECONSTRUCTION">the value to be inserted for ID_RECONSTRUCTION.</param>
            <param name="i_ID_OPTION">the value to be inserted for ID_OPTION.</param>
            <param name="i_ID_PLATE">the value to be inserted for ID_PLATE.</param>
            <param name="i_ID_ZONE">the value to be inserted for ID_ZONE.</param>
            <param name="i_SIDE">the value to be inserted for SIDE.</param>
            <param name="i_ID_MIPMICROTRACK">the value to be inserted for ID_MIPMICROTRACK.</param>
            <param name="i_ID_VOLUMETRACK">the value to be inserted for ID_VOLUMETRACK.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_VOLTKS_ALIGNMUTKS and retrieves them into a new TB_VOLTKS_ALIGNMUTKS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_RECONSTRUCTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_OPTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PLATE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_SIDE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_VOLUMETRACK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_VOLTKS_ALIGNMUTKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_VOLTKS_ALIGNMUTKS and retrieves them into a new TB_VOLTKS_ALIGNMUTKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_VOLTKS_ALIGNMUTKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLTKS_ALIGNMUTKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_VOLUMES">
            <summary>
            Accesses the TB_VOLUMES table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMES._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMES._VOLUME">
            <summary>
            Retrieves VOLUME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMES._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMES._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMES.Insert(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_VOLUME">the value to be inserted for VOLUME.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
            <param name="i_ID">the value to be inserted for ID. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMES.SelectPrimaryKey(System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_VOLUMES and retrieves them into a new TB_VOLUMES object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_VOLUME">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PROCESSOPERATION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_VOLUMES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMES.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_VOLUMES and retrieves them into a new TB_VOLUMES object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_VOLUMES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMES.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMES.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_VOLUMETRACKS">
            <summary>
            Accesses the TB_VOLUMETRACKS table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMETRACKS.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_VOLUMETRACKS. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS._ID_RECONSTRUCTION">
            <summary>
            Retrieves ID_RECONSTRUCTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS._ID_OPTION">
            <summary>
            Retrieves ID_OPTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS._DOWNZ">
            <summary>
            Retrieves DOWNZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS._UPZ">
            <summary>
            Retrieves UPZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS._ID_DOWNSTREAMVERTEX">
            <summary>
            Retrieves ID_DOWNSTREAMVERTEX for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS._ID_UPSTREAMVERTEX">
            <summary>
            Retrieves ID_UPSTREAMVERTEX for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMETRACKS.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.Double,System.Double,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_RECONSTRUCTION">the value to be inserted for ID_RECONSTRUCTION.</param>
            <param name="i_ID_OPTION">the value to be inserted for ID_OPTION.</param>
            <param name="i_ID">the value to be inserted for ID.</param>
            <param name="i_DOWNZ">the value to be inserted for DOWNZ.</param>
            <param name="i_UPZ">the value to be inserted for UPZ.</param>
            <param name="i_ID_DOWNSTREAMVERTEX">the value to be inserted for ID_DOWNSTREAMVERTEX. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_ID_UPSTREAMVERTEX">the value to be inserted for ID_UPSTREAMVERTEX. The value for this parameter can be long or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMETRACKS.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_VOLUMETRACKS and retrieves them into a new TB_VOLUMETRACKS object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_RECONSTRUCTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_OPTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_VOLUMETRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMETRACKS.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_VOLUMETRACKS and retrieves them into a new TB_VOLUMETRACKS object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_VOLUMETRACKS class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_VOLUMETRACKS_ATTR">
            <summary>
            Accesses the TB_VOLUMETRACKS_ATTR table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMETRACKS_ATTR.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_VOLUMETRACKS_ATTR. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_ATTR._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_ATTR._ID_RECONSTRUCTION">
            <summary>
            Retrieves ID_RECONSTRUCTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_ATTR._ID_OPTION">
            <summary>
            Retrieves ID_OPTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_ATTR._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_ATTR._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_ATTR._NAME">
            <summary>
            Retrieves NAME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_ATTR._VALUE">
            <summary>
            Retrieves VALUE for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMETRACKS_ATTR.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.String,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_RECONSTRUCTION">the value to be inserted for ID_RECONSTRUCTION.</param>
            <param name="i_ID_OPTION">the value to be inserted for ID_OPTION.</param>
            <param name="i_ID">the value to be inserted for ID.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
            <param name="i_NAME">the value to be inserted for NAME.</param>
            <param name="i_VALUE">the value to be inserted for VALUE. The value for this parameter can be double or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMETRACKS_ATTR.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_VOLUMETRACKS_ATTR and retrieves them into a new TB_VOLUMETRACKS_ATTR object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_RECONSTRUCTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_OPTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PROCESSOPERATION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_NAME">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_VOLUMETRACKS_ATTR class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMETRACKS_ATTR.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_VOLUMETRACKS_ATTR and retrieves them into a new TB_VOLUMETRACKS_ATTR object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_VOLUMETRACKS_ATTR class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_ATTR.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_ATTR.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT">
            <summary>
            Accesses the TB_VOLUMETRACKS_FIT table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_VOLUMETRACKS_FIT. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._ID_RECONSTRUCTION">
            <summary>
            Retrieves ID_RECONSTRUCTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._ID_OPTION">
            <summary>
            Retrieves ID_OPTION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._TYPE">
            <summary>
            Retrieves TYPE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._DOWNPOSX">
            <summary>
            Retrieves DOWNPOSX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._DOWNPOSY">
            <summary>
            Retrieves DOWNPOSY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._DOWNPOSZ">
            <summary>
            Retrieves DOWNPOSZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._DOWNSLOPEX">
            <summary>
            Retrieves DOWNSLOPEX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._DOWNSLOPEY">
            <summary>
            Retrieves DOWNSLOPEY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._DOWNQUALITY">
            <summary>
            Retrieves DOWNQUALITY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._UPPOSX">
            <summary>
            Retrieves UPPOSX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._UPPOSY">
            <summary>
            Retrieves UPPOSY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._UPPOSZ">
            <summary>
            Retrieves UPPOSZ for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._UPSLOPEX">
            <summary>
            Retrieves UPSLOPEX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._UPSLOPEY">
            <summary>
            Retrieves UPSLOPEY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT._UPQUALITY">
            <summary>
            Retrieves UPQUALITY for the current row.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_RECONSTRUCTION">the value to be inserted for ID_RECONSTRUCTION.</param>
            <param name="i_ID_OPTION">the value to be inserted for ID_OPTION.</param>
            <param name="i_ID">the value to be inserted for ID.</param>
            <param name="i_TYPE">the value to be inserted for TYPE.</param>
            <param name="i_DOWNPOSX">the value to be inserted for DOWNPOSX.</param>
            <param name="i_DOWNPOSY">the value to be inserted for DOWNPOSY.</param>
            <param name="i_DOWNPOSZ">the value to be inserted for DOWNPOSZ.</param>
            <param name="i_DOWNSLOPEX">the value to be inserted for DOWNSLOPEX.</param>
            <param name="i_DOWNSLOPEY">the value to be inserted for DOWNSLOPEY.</param>
            <param name="i_DOWNQUALITY">the value to be inserted for DOWNQUALITY.</param>
            <param name="i_UPPOSX">the value to be inserted for UPPOSX.</param>
            <param name="i_UPPOSY">the value to be inserted for UPPOSY.</param>
            <param name="i_UPPOSZ">the value to be inserted for UPPOSZ.</param>
            <param name="i_UPSLOPEX">the value to be inserted for UPSLOPEX.</param>
            <param name="i_UPSLOPEY">the value to be inserted for UPSLOPEY.</param>
            <param name="i_UPQUALITY">the value to be inserted for UPQUALITY.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT.SelectPrimaryKey(System.Object,System.Object,System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_VOLUMETRACKS_FIT and retrieves them into a new TB_VOLUMETRACKS_FIT object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_RECONSTRUCTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_OPTION">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_TYPE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_VOLUMETRACKS_FIT class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_VOLUMETRACKS_FIT and retrieves them into a new TB_VOLUMETRACKS_FIT object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_VOLUMETRACKS_FIT class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUMETRACKS_FIT.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_VOLUME_SLICES">
            <summary>
            Accesses the TB_VOLUME_SLICES table in the DB.
            For data insertion, the Insert and Flush static methods are used. This class inserts data in batches.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUME_SLICES.Flush">
            <summary>
            Since this class uses batch insertion, this method must be called to ensure that all rows are actually inserted into TB_VOLUME_SLICES. Failure to do so will result in incomplete writes.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUME_SLICES._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUME_SLICES._ID_VOLUME">
            <summary>
            Retrieves ID_VOLUME for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUME_SLICES._ID_PLATE">
            <summary>
            Retrieves ID_PLATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUME_SLICES._MINX">
            <summary>
            Retrieves MINX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUME_SLICES._MAXX">
            <summary>
            Retrieves MAXX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUME_SLICES._MINY">
            <summary>
            Retrieves MINY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUME_SLICES._MAXY">
            <summary>
            Retrieves MAXY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUME_SLICES._ID_ZONE">
            <summary>
            Retrieves ID_ZONE for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUME_SLICES._DAMAGED">
            <summary>
            Retrieves DAMAGED for the current row. The return value can be System.DBNull.Value or a value that can be cast to char.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUME_SLICES.Insert(System.Int64,System.Int64,System.Int64,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is actually inserted later, in a batch insertion command. The Flush method must be called to ensure all rows are actually written.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_VOLUME">the value to be inserted for ID_VOLUME.</param>
            <param name="i_ID_PLATE">the value to be inserted for ID_PLATE.</param>
            <param name="i_MINX">the value to be inserted for MINX.</param>
            <param name="i_MAXX">the value to be inserted for MAXX.</param>
            <param name="i_MINY">the value to be inserted for MINY.</param>
            <param name="i_MAXY">the value to be inserted for MAXY.</param>
            <param name="i_ID_ZONE">the value to be inserted for ID_ZONE. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_DAMAGED">the value to be inserted for DAMAGED. The value for this parameter can be char or System.DBNull.Value.</param>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUME_SLICES.SelectPrimaryKey(System.Object,System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_VOLUME_SLICES and retrieves them into a new TB_VOLUME_SLICES object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_VOLUME">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID_PLATE">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_VOLUME_SLICES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_VOLUME_SLICES.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_VOLUME_SLICES and retrieves them into a new TB_VOLUME_SLICES object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_VOLUME_SLICES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUME_SLICES.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_VOLUME_SLICES.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.TB_ZONES">
            <summary>
            Accesses the TB_ZONES table in the DB.
            For data insertion, the Insert method is used. Rows are inserted one by one.
            An instance of the class is produced for data retrieval.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._ID_EVENTBRICK">
            <summary>
            Retrieves ID_EVENTBRICK for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._ID_PLATE">
            <summary>
            Retrieves ID_PLATE for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._ID_PROCESSOPERATION">
            <summary>
            Retrieves ID_PROCESSOPERATION for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._ID">
            <summary>
            Retrieves ID for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._MINX">
            <summary>
            Retrieves MINX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._MAXX">
            <summary>
            Retrieves MAXX for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._MINY">
            <summary>
            Retrieves MINY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._MAXY">
            <summary>
            Retrieves MAXY for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._RAWDATAPATH">
            <summary>
            Retrieves RAWDATAPATH for the current row.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._STARTTIME">
            <summary>
            Retrieves STARTTIME for the current row. The return value can be System.DBNull.Value or a value that can be cast to System.DateTime.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._ENDTIME">
            <summary>
            Retrieves ENDTIME for the current row. The return value can be System.DBNull.Value or a value that can be cast to System.DateTime.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._SERIES">
            <summary>
            Retrieves SERIES for the current row. The return value can be System.DBNull.Value or a value that can be cast to long.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._TXX">
            <summary>
            Retrieves TXX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._TXY">
            <summary>
            Retrieves TXY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._TYX">
            <summary>
            Retrieves TYX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._TYY">
            <summary>
            Retrieves TYY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._TDX">
            <summary>
            Retrieves TDX for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES._TDY">
            <summary>
            Retrieves TDY for the current row. The return value can be System.DBNull.Value or a value that can be cast to double.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ZONES.Insert(System.Int64,System.Int64,System.Int64,System.Int64,System.Double,System.Double,System.Double,System.Double,System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts one row into the DB. The row is inserted immediately.
            </summary>
            <param name="i_ID_EVENTBRICK">the value to be inserted for ID_EVENTBRICK.</param>
            <param name="i_ID_PLATE">the value to be inserted for ID_PLATE.</param>
            <param name="i_ID_PROCESSOPERATION">the value to be inserted for ID_PROCESSOPERATION.</param>
            <param name="i_ID">the value to be inserted for ID. This value is actually used only if this method call is involved in data publication/replication, otherwise the actual value is generated by the OPERA DB and the supplied value is ignored.</param>
            <param name="i_MINX">the value to be inserted for MINX.</param>
            <param name="i_MAXX">the value to be inserted for MAXX.</param>
            <param name="i_MINY">the value to be inserted for MINY.</param>
            <param name="i_MAXY">the value to be inserted for MAXY.</param>
            <param name="i_RAWDATAPATH">the value to be inserted for RAWDATAPATH.</param>
            <param name="i_STARTTIME">the value to be inserted for STARTTIME. The value for this parameter can be System.DateTime or System.DBNull.Value.</param>
            <param name="i_ENDTIME">the value to be inserted for ENDTIME. The value for this parameter can be System.DateTime or System.DBNull.Value.</param>
            <param name="i_SERIES">the value to be inserted for SERIES. The value for this parameter can be long or System.DBNull.Value.</param>
            <param name="i_TXX">the value to be inserted for TXX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_TXY">the value to be inserted for TXY. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_TYX">the value to be inserted for TYX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_TYY">the value to be inserted for TYY. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_TDX">the value to be inserted for TDX. The value for this parameter can be double or System.DBNull.Value.</param>
            <param name="i_TDY">the value to be inserted for TDY. The value for this parameter can be double or System.DBNull.Value.</param>
            <returns>the value of ID for the new row.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ZONES.SelectPrimaryKey(System.Object,System.Object,SySal.OperaDb.Schema.OrderBy)">
            <summary>
            Reads a set of rows from TB_ZONES and retrieves them into a new TB_ZONES object.
            </summary>
            <param name="i_ID_EVENTBRICK">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="i_ID">if non-null, only rows that have this field equal to the specified value are returned.</param>
            <param name="order">the ordering scheme to be applied to returned rows. This applies to all columns in the primary key.</param>
            <returns>a new instance of the TB_ZONES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="M:SySal.OperaDb.Schema.TB_ZONES.SelectWhere(System.String,System.String)">
            <summary>
            Reads a set of rows from TB_ZONES and retrieves them into a new TB_ZONES object.
            </summary>
            <param name="wherestr">the string to be used in the WHERE clause. If null or empty, no WHERE clause is generated and all rows are returned.</param>
            <param name="orderstr">the string to be used in the ORDER BY clause. If null or empty, no ORDER BY clause is generated and rows are returned in an unspecified, non-deterministic order.</param>
            <returns>a new instance of the TB_ZONES class that can be used to read the retrieved data.</returns>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES.Count">
            <summary>
            the number of rows retrieved.
            </summary>
        </member>
        <member name="P:SySal.OperaDb.Schema.TB_ZONES.Row">
            <summary>
            the current row for which field values are exposed.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LP_ADD_PROC_OPERATION">
            <summary>
            Accesses the LP_ADD_PROC_OPERATION procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LP_ADD_PROC_OPERATION.Call(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@,System.Object,System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "O_MACHINEID">the value of O_MACHINEID to be used for the procedure call.</param>
            <param name = "O_PROGSETID">the value of O_PROGSETID to be used for the procedure call.</param>
            <param name = "O_USR">the value of O_USR to be used for the procedure call.</param>
            <param name = "O_PWD">the value of O_PWD to be used for the procedure call.</param>
            <param name = "O_TOKEN">the value of O_TOKEN obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "O_REQID">the value of O_REQID obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "O_PARENTOPID">the value of O_PARENTOPID to be used for the procedure call.</param>
            <param name = "O_STARTTIME">the value of O_STARTTIME to be used for the procedure call.</param>
            <param name = "O_NOTES">the value of O_NOTES to be used for the procedure call.</param>
            <param name = "NEWID">the value of NEWID obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.LP_ADD_PROC_OPERATION_BRICK">
            <summary>
            Accesses the LP_ADD_PROC_OPERATION_BRICK procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LP_ADD_PROC_OPERATION_BRICK.Call(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@,System.Object,System.Object,System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "O_MACHINEID">the value of O_MACHINEID to be used for the procedure call.</param>
            <param name = "O_PROGSETID">the value of O_PROGSETID to be used for the procedure call.</param>
            <param name = "O_USR">the value of O_USR to be used for the procedure call.</param>
            <param name = "O_PWD">the value of O_PWD to be used for the procedure call.</param>
            <param name = "O_TOKEN">the value of O_TOKEN obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "O_REQID">the value of O_REQID obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "O_BRICKID">the value of O_BRICKID to be used for the procedure call.</param>
            <param name = "O_PARENTOPID">the value of O_PARENTOPID to be used for the procedure call.</param>
            <param name = "O_STARTTIME">the value of O_STARTTIME to be used for the procedure call.</param>
            <param name = "O_NOTES">the value of O_NOTES to be used for the procedure call.</param>
            <param name = "NEWID">the value of NEWID obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.LP_ADD_PROC_OPERATION_PLATE">
            <summary>
            Accesses the LP_ADD_PROC_OPERATION_PLATE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LP_ADD_PROC_OPERATION_PLATE.Call(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "O_MACHINEID">the value of O_MACHINEID to be used for the procedure call.</param>
            <param name = "O_PROGSETID">the value of O_PROGSETID to be used for the procedure call.</param>
            <param name = "O_USR">the value of O_USR to be used for the procedure call.</param>
            <param name = "O_PWD">the value of O_PWD to be used for the procedure call.</param>
            <param name = "O_TOKEN">the value of O_TOKEN obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "O_REQID">the value of O_REQID obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "O_BRICKID">the value of O_BRICKID to be used for the procedure call.</param>
            <param name = "O_PLATEID">the value of O_PLATEID to be used for the procedure call.</param>
            <param name = "O_PARENTOPID">the value of O_PARENTOPID to be used for the procedure call.</param>
            <param name = "O_CALIBRATION">the value of O_CALIBRATION to be used for the procedure call.</param>
            <param name = "O_STARTTIME">the value of O_STARTTIME to be used for the procedure call.</param>
            <param name = "O_NOTES">the value of O_NOTES to be used for the procedure call.</param>
            <param name = "NEWID">the value of NEWID obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.LP_CHECK_ACCESS">
            <summary>
            Accesses the LP_CHECK_ACCESS procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LP_CHECK_ACCESS.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "O_TOKEN">the value of O_TOKEN to be used for the procedure call.</param>
            <param name = "O_REQUESTSCAN">the value of O_REQUESTSCAN to be used for the procedure call.</param>
            <param name = "O_REQUESTWEBANALYSIS">the value of O_REQUESTWEBANALYSIS to be used for the procedure call.</param>
            <param name = "O_REQUESTDATADOWNLOAD">the value of O_REQUESTDATADOWNLOAD to be used for the procedure call.</param>
            <param name = "O_REQUESTDATAPROCESSING">the value of O_REQUESTDATAPROCESSING to be used for the procedure call.</param>
            <param name = "O_REQUESTPROCESSSTARTUP">the value of O_REQUESTPROCESSSTARTUP to be used for the procedure call.</param>
            <param name = "O_ADMINISTER">the value of O_ADMINISTER to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.LP_CHECK_TOKEN_OWNERSHIP">
            <summary>
            Accesses the LP_CHECK_TOKEN_OWNERSHIP procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LP_CHECK_TOKEN_OWNERSHIP.Call(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "O_TOKEN">the value of O_TOKEN to be used for the procedure call.</param>
            <param name = "O_UID">the value of O_UID to be used for the procedure call, which can be modified on procedure completion as an output. If null, the input is replaced with a <c>System.DBNull.Value</c> and the output is ignored.</param>
            <param name = "O_USR">the value of O_USR to be used for the procedure call.</param>
            <param name = "O_PWD">the value of O_PWD to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.LP_CLEAN_ORPHAN_TOKENS">
            <summary>
            Accesses the LP_CLEAN_ORPHAN_TOKENS procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LP_CLEAN_ORPHAN_TOKENS.Call">
            <summary>
            Calls the procedure.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LP_DATABUFFER_FLUSH">
            <summary>
            Accesses the LP_DATABUFFER_FLUSH procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LP_DATABUFFER_FLUSH.Call">
            <summary>
            Calls the procedure.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.LP_FAIL_OPERATION">
            <summary>
            Accesses the LP_FAIL_OPERATION procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LP_FAIL_OPERATION.Call(System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "O_ID">the value of O_ID to be used for the procedure call.</param>
            <param name = "O_FINISHTIME">the value of O_FINISHTIME to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.LP_SUCCESS_OPERATION">
            <summary>
            Accesses the LP_SUCCESS_OPERATION procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.LP_SUCCESS_OPERATION.Call(System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "O_ID">the value of O_ID to be used for the procedure call.</param>
            <param name = "O_FINISHTIME">the value of O_FINISHTIME to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ADD_BRICK">
            <summary>
            Accesses the PC_ADD_BRICK procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ADD_BRICK.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "B_IDBRICK">the value of B_IDBRICK to be used for the procedure call.</param>
            <param name = "B_MINX">the value of B_MINX to be used for the procedure call.</param>
            <param name = "B_MAXX">the value of B_MAXX to be used for the procedure call.</param>
            <param name = "B_MINY">the value of B_MINY to be used for the procedure call.</param>
            <param name = "B_MAXY">the value of B_MAXY to be used for the procedure call.</param>
            <param name = "B_MINZ">the value of B_MINZ to be used for the procedure call.</param>
            <param name = "B_MAXZ">the value of B_MAXZ to be used for the procedure call.</param>
            <param name = "B_SET">the value of B_SET to be used for the procedure call.</param>
            <param name = "B_ID">the value of B_ID obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ADD_BRICK_EASY">
            <summary>
            Accesses the PC_ADD_BRICK_EASY procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ADD_BRICK_EASY.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "B_IDBRICK">the value of B_IDBRICK to be used for the procedure call.</param>
            <param name = "B_MINX">the value of B_MINX to be used for the procedure call.</param>
            <param name = "B_MAXX">the value of B_MAXX to be used for the procedure call.</param>
            <param name = "B_MINY">the value of B_MINY to be used for the procedure call.</param>
            <param name = "B_MAXY">the value of B_MAXY to be used for the procedure call.</param>
            <param name = "B_NPL">the value of B_NPL to be used for the procedure call.</param>
            <param name = "B_MAXZ">the value of B_MAXZ to be used for the procedure call.</param>
            <param name = "B_DOWN">the value of B_DOWN to be used for the procedure call.</param>
            <param name = "B_SET">the value of B_SET to be used for the procedure call.</param>
            <param name = "B_ID">the value of B_ID obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ADD_BRICK_EASY_Z">
            <summary>
            Accesses the PC_ADD_BRICK_EASY_Z procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ADD_BRICK_EASY_Z.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "B_IDBRICK">the value of B_IDBRICK to be used for the procedure call.</param>
            <param name = "B_MINX">the value of B_MINX to be used for the procedure call.</param>
            <param name = "B_MAXX">the value of B_MAXX to be used for the procedure call.</param>
            <param name = "B_MINY">the value of B_MINY to be used for the procedure call.</param>
            <param name = "B_MAXY">the value of B_MAXY to be used for the procedure call.</param>
            <param name = "B_NPL">the value of B_NPL to be used for the procedure call.</param>
            <param name = "B_MAXZ">the value of B_MAXZ to be used for the procedure call.</param>
            <param name = "B_DOWN">the value of B_DOWN to be used for the procedure call.</param>
            <param name = "B_SET">the value of B_SET to be used for the procedure call.</param>
            <param name = "B_ID">the value of B_ID obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "B_ZEROX">the value of B_ZEROX to be used for the procedure call.</param>
            <param name = "B_ZEROY">the value of B_ZEROY to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ADD_BRICK_SET">
            <summary>
            Accesses the PC_ADD_BRICK_SET procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ADD_BRICK_SET.Call(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "NEWID">the value of NEWID to be used for the procedure call.</param>
            <param name = "RNGMIN">the value of RNGMIN to be used for the procedure call.</param>
            <param name = "RNGMAX">the value of RNGMAX to be used for the procedure call.</param>
            <param name = "TBLSPC_EXT">the value of TBLSPC_EXT to be used for the procedure call.</param>
            <param name = "DEFID">the value of DEFID to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ADD_BRICK_SPACE">
            <summary>
            Accesses the PC_ADD_BRICK_SPACE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ADD_BRICK_SPACE.Call(System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "NEWID">the value of NEWID to be used for the procedure call.</param>
            <param name = "IDSET">the value of IDSET to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ADD_CS_DOUBLET">
            <summary>
            Accesses the PC_ADD_CS_DOUBLET procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ADD_CS_DOUBLET.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "B_IDBRICK">the value of B_IDBRICK to be used for the procedure call.</param>
            <param name = "B_MINX">the value of B_MINX to be used for the procedure call.</param>
            <param name = "B_MAXX">the value of B_MAXX to be used for the procedure call.</param>
            <param name = "B_MINY">the value of B_MINY to be used for the procedure call.</param>
            <param name = "B_MAXY">the value of B_MAXY to be used for the procedure call.</param>
            <param name = "B_MINZ">the value of B_MINZ to be used for the procedure call.</param>
            <param name = "B_MAXZ">the value of B_MAXZ to be used for the procedure call.</param>
            <param name = "B_SET">the value of B_SET to be used for the procedure call.</param>
            <param name = "B_ID">the value of B_ID obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ADD_MACHINE">
            <summary>
            Accesses the PC_ADD_MACHINE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ADD_MACHINE.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "S_ID">the value of S_ID to be used for the procedure call.</param>
            <param name = "M_NAME">the value of M_NAME to be used for the procedure call.</param>
            <param name = "M_ADDRESS">the value of M_ADDRESS to be used for the procedure call.</param>
            <param name = "M_SCANSRV">the value of M_SCANSRV to be used for the procedure call.</param>
            <param name = "M_BATCHSRV">the value of M_BATCHSRV to be used for the procedure call.</param>
            <param name = "M_DATAPROCSRV">the value of M_DATAPROCSRV to be used for the procedure call.</param>
            <param name = "M_WEBSRV">the value of M_WEBSRV to be used for the procedure call.</param>
            <param name = "M_DBSRV">the value of M_DBSRV to be used for the procedure call.</param>
            <param name = "NEWID">the value of NEWID obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ADD_PROC_OPERATION">
            <summary>
            Accesses the PC_ADD_PROC_OPERATION procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ADD_PROC_OPERATION.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "O_MACHINEID">the value of O_MACHINEID to be used for the procedure call.</param>
            <param name = "O_PROGSETID">the value of O_PROGSETID to be used for the procedure call.</param>
            <param name = "O_REQID">the value of O_REQID to be used for the procedure call.</param>
            <param name = "O_PARENTOPID">the value of O_PARENTOPID to be used for the procedure call.</param>
            <param name = "O_STARTTIME">the value of O_STARTTIME to be used for the procedure call.</param>
            <param name = "O_NOTES">the value of O_NOTES to be used for the procedure call.</param>
            <param name = "NEWID">the value of NEWID obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ADD_PROC_OPERATION_BRICK">
            <summary>
            Accesses the PC_ADD_PROC_OPERATION_BRICK procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ADD_PROC_OPERATION_BRICK.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "O_MACHINEID">the value of O_MACHINEID to be used for the procedure call.</param>
            <param name = "O_PROGSETID">the value of O_PROGSETID to be used for the procedure call.</param>
            <param name = "O_REQID">the value of O_REQID to be used for the procedure call.</param>
            <param name = "O_BRICKID">the value of O_BRICKID to be used for the procedure call.</param>
            <param name = "O_PARENTOPID">the value of O_PARENTOPID to be used for the procedure call.</param>
            <param name = "O_STARTTIME">the value of O_STARTTIME to be used for the procedure call.</param>
            <param name = "O_NOTES">the value of O_NOTES to be used for the procedure call.</param>
            <param name = "NEWID">the value of NEWID obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ADD_PROC_OPERATION_PLATE">
            <summary>
            Accesses the PC_ADD_PROC_OPERATION_PLATE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ADD_PROC_OPERATION_PLATE.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "O_MACHINEID">the value of O_MACHINEID to be used for the procedure call.</param>
            <param name = "O_PROGSETID">the value of O_PROGSETID to be used for the procedure call.</param>
            <param name = "O_REQID">the value of O_REQID to be used for the procedure call.</param>
            <param name = "O_BRICKID">the value of O_BRICKID to be used for the procedure call.</param>
            <param name = "O_PLATEID">the value of O_PLATEID to be used for the procedure call.</param>
            <param name = "O_PARENTOPID">the value of O_PARENTOPID to be used for the procedure call.</param>
            <param name = "O_CALIBRATION">the value of O_CALIBRATION to be used for the procedure call.</param>
            <param name = "O_STARTTIME">the value of O_STARTTIME to be used for the procedure call.</param>
            <param name = "O_NOTES">the value of O_NOTES to be used for the procedure call.</param>
            <param name = "NEWID">the value of NEWID obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ADD_PROGRAMSETTINGS">
            <summary>
            Accesses the PC_ADD_PROGRAMSETTINGS procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ADD_PROGRAMSETTINGS.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "P_DESC">the value of P_DESC to be used for the procedure call.</param>
            <param name = "P_EXE">the value of P_EXE to be used for the procedure call.</param>
            <param name = "P_AUTHID">the value of P_AUTHID to be used for the procedure call.</param>
            <param name = "P_DRIVERLEVEL">the value of P_DRIVERLEVEL to be used for the procedure call.</param>
            <param name = "P_USETEMPLATEMARKS">the value of P_USETEMPLATEMARKS to be used for the procedure call.</param>
            <param name = "P_MARKSET">the value of P_MARKSET to be used for the procedure call.</param>
            <param name = "P_SETTINGS">the value of P_SETTINGS to be used for the procedure call.</param>
            <param name = "NEWID">the value of NEWID obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ADD_PUBLISHER">
            <summary>
            Accesses the PC_ADD_PUBLISHER procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ADD_PUBLISHER.Call(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "NAME">the value of NAME to be used for the procedure call.</param>
            <param name = "SHORTNAME">the value of SHORTNAME to be used for the procedure call.</param>
            <param name = "PUB_TYPE">the value of PUB_TYPE to be used for the procedure call.</param>
            <param name = "RANGEMIN">the value of RANGEMIN to be used for the procedure call.</param>
            <param name = "RANGEMAX">the value of RANGEMAX to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ADD_SITE">
            <summary>
            Accesses the PC_ADD_SITE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ADD_SITE.Call(System.Object,System.Object,System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "S_NAME">the value of S_NAME to be used for the procedure call.</param>
            <param name = "S_LATITUDE">the value of S_LATITUDE to be used for the procedure call.</param>
            <param name = "S_LONGITUDE">the value of S_LONGITUDE to be used for the procedure call.</param>
            <param name = "S_LOCALTIMEFUSE">the value of S_LOCALTIMEFUSE to be used for the procedure call.</param>
            <param name = "NEWID">the value of NEWID obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ADD_USER">
            <summary>
            Accesses the PC_ADD_USER procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ADD_USER.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "S_ID">the value of S_ID to be used for the procedure call.</param>
            <param name = "U_USERNAME">the value of U_USERNAME to be used for the procedure call.</param>
            <param name = "U_PWD">the value of U_PWD to be used for the procedure call.</param>
            <param name = "U_NAME">the value of U_NAME to be used for the procedure call.</param>
            <param name = "U_SURNAME">the value of U_SURNAME to be used for the procedure call.</param>
            <param name = "U_INST">the value of U_INST to be used for the procedure call.</param>
            <param name = "U_EMAIL">the value of U_EMAIL to be used for the procedure call.</param>
            <param name = "U_ADDRESS">the value of U_ADDRESS to be used for the procedure call.</param>
            <param name = "U_PHONE">the value of U_PHONE to be used for the procedure call.</param>
            <param name = "NEWID">the value of NEWID obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_AUTOEXTEND_TABLESPACES">
            <summary>
            Accesses the PC_AUTOEXTEND_TABLESPACES procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_AUTOEXTEND_TABLESPACES.Call">
            <summary>
            Calls the procedure.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_CALIBRATE_PLATE">
            <summary>
            Accesses the PC_CALIBRATE_PLATE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_CALIBRATE_PLATE.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "B_BRICKID">the value of B_BRICKID to be used for the procedure call.</param>
            <param name = "P_PLATEID">the value of P_PLATEID to be used for the procedure call.</param>
            <param name = "O_PROCOP">the value of O_PROCOP to be used for the procedure call.</param>
            <param name = "O_MARKSETS">the value of O_MARKSETS to be used for the procedure call.</param>
            <param name = "C_Z">the value of C_Z to be used for the procedure call.</param>
            <param name = "C_MAPXX">the value of C_MAPXX to be used for the procedure call.</param>
            <param name = "C_MAPXY">the value of C_MAPXY to be used for the procedure call.</param>
            <param name = "C_MAPYX">the value of C_MAPYX to be used for the procedure call.</param>
            <param name = "C_MAPYY">the value of C_MAPYY to be used for the procedure call.</param>
            <param name = "C_MAPDX">the value of C_MAPDX to be used for the procedure call.</param>
            <param name = "C_MAPDY">the value of C_MAPDY to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_CHECK_LOGIN">
            <summary>
            Accesses the PC_CHECK_LOGIN procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_CHECK_LOGIN.Call(System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "U_USERNAME">the value of U_USERNAME to be used for the procedure call.</param>
            <param name = "U_PWD">the value of U_PWD to be used for the procedure call.</param>
            <param name = "U_ID">the value of U_ID obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_CS_AUTO_ADD_SPACE">
            <summary>
            Accesses the PC_CS_AUTO_ADD_SPACE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_CS_AUTO_ADD_SPACE.Call(System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "I_ID_CS_EVENTBRICK">the value of I_ID_CS_EVENTBRICK to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_DEL_MACHINE">
            <summary>
            Accesses the PC_DEL_MACHINE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_DEL_MACHINE.Call(System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "M_ID">the value of M_ID to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_DEL_PRIVILEGES">
            <summary>
            Accesses the PC_DEL_PRIVILEGES procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_DEL_PRIVILEGES.Call(System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "U_ID">the value of U_ID to be used for the procedure call.</param>
            <param name = "S_ID">the value of S_ID to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_DEL_PROGRAMSETTINGS">
            <summary>
            Accesses the PC_DEL_PROGRAMSETTINGS procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_DEL_PROGRAMSETTINGS.Call(System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "P_ID">the value of P_ID to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_DEL_SITE">
            <summary>
            Accesses the PC_DEL_SITE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_DEL_SITE.Call(System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "S_ID">the value of S_ID to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_DEL_USER">
            <summary>
            Accesses the PC_DEL_USER procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_DEL_USER.Call(System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "U_ID">the value of U_ID to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_DISABLE_TABLE_LOCK">
            <summary>
            Accesses the PC_DISABLE_TABLE_LOCK procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_DISABLE_TABLE_LOCK.Call">
            <summary>
            Calls the procedure.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_EMPTY_VOLUMESLICES">
            <summary>
            Accesses the PC_EMPTY_VOLUMESLICES procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_EMPTY_VOLUMESLICES.Call(System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "ID_BRICK">the value of ID_BRICK to be used for the procedure call.</param>
            <param name = "ID_PROCOP">the value of ID_PROCOP to be used for the procedure call.</param>
            <param name = "ID_PL">the value of ID_PL to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_ENABLE_TABLE_LOCK">
            <summary>
            Accesses the PC_ENABLE_TABLE_LOCK procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_ENABLE_TABLE_LOCK.Call">
            <summary>
            Calls the procedure.
            </summary>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_FAIL_OPERATION">
            <summary>
            Accesses the PC_FAIL_OPERATION procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_FAIL_OPERATION.Call(System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "O_ID">the value of O_ID to be used for the procedure call.</param>
            <param name = "O_FINISHTIME">the value of O_FINISHTIME to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_FIND_BRICKSET">
            <summary>
            Accesses the PC_FIND_BRICKSET procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_FIND_BRICKSET.Call(System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "I_ID">the value of I_ID to be used for the procedure call.</param>
            <param name = "O_SET">the value of O_SET obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_GET_PRIVILEGES">
            <summary>
            Accesses the PC_GET_PRIVILEGES procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_GET_PRIVILEGES.Call(System.Object,System.Object,System.Object,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "U_USERID">the value of U_USERID to be used for the procedure call.</param>
            <param name = "S_SITEID">the value of S_SITEID to be used for the procedure call.</param>
            <param name = "PWD">the value of PWD to be used for the procedure call.</param>
            <param name = "P_SCAN">the value of P_SCAN obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "P_WEBAN">the value of P_WEBAN obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "P_DATAPROC">the value of P_DATAPROC obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "P_DATADWNL">the value of P_DATADWNL obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "P_PROCSTART">the value of P_PROCSTART obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "P_ADMIN">the value of P_ADMIN obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_GET_PRIVILEGES_ADM">
            <summary>
            Accesses the PC_GET_PRIVILEGES_ADM procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_GET_PRIVILEGES_ADM.Call(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "ADM_ID">the value of ADM_ID to be used for the procedure call.</param>
            <param name = "ADM_PWD">the value of ADM_PWD to be used for the procedure call.</param>
            <param name = "U_USERID">the value of U_USERID to be used for the procedure call.</param>
            <param name = "S_SITEID">the value of S_SITEID to be used for the procedure call.</param>
            <param name = "P_SCAN">the value of P_SCAN obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "P_WEBAN">the value of P_WEBAN obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "P_DATAPROC">the value of P_DATAPROC obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "P_DATADWNL">the value of P_DATADWNL obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "P_PROCSTART">the value of P_PROCSTART obtained from the procedure call as an output. If null, the output is ignored.</param>
            <param name = "P_ADMIN">the value of P_ADMIN obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_GET_PWD">
            <summary>
            Accesses the PC_GET_PWD procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_GET_PWD.Call(System.Object,System.Object,System.Object,System.Object@)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "ADMIN_ID">the value of ADMIN_ID to be used for the procedure call.</param>
            <param name = "ADMIN_PWD">the value of ADMIN_PWD to be used for the procedure call.</param>
            <param name = "USER_ID">the value of USER_ID to be used for the procedure call.</param>
            <param name = "USER_PWD">the value of USER_PWD obtained from the procedure call as an output. If null, the output is ignored.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_JOB_SLEEP">
            <summary>
            Accesses the PC_JOB_SLEEP procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_JOB_SLEEP.Call(System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "SECS">the value of SECS to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_REFRESH_PUBLISHER">
            <summary>
            Accesses the PC_REFRESH_PUBLISHER procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_REFRESH_PUBLISHER.Call(System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "I_NAME">the value of I_NAME to be used for the procedure call.</param>
            <param name = "SHORTNAME">the value of SHORTNAME to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_REMOVE_BRICK_SET">
            <summary>
            Accesses the PC_REMOVE_BRICK_SET procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_REMOVE_BRICK_SET.Call(System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "IDSET">the value of IDSET to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_REMOVE_BRICK_SPACE">
            <summary>
            Accesses the PC_REMOVE_BRICK_SPACE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_REMOVE_BRICK_SPACE.Call(System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "OLDID">the value of OLDID to be used for the procedure call.</param>
            <param name = "IDSET">the value of IDSET to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_REMOVE_CS_OR_BRICK">
            <summary>
            Accesses the PC_REMOVE_CS_OR_BRICK procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_REMOVE_CS_OR_BRICK.Call(System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "B_IDBRICK">the value of B_IDBRICK to be used for the procedure call.</param>
            <param name = "B_SET">the value of B_SET to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_REMOVE_PUBLISHER">
            <summary>
            Accesses the PC_REMOVE_PUBLISHER procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_REMOVE_PUBLISHER.Call(System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "NAME">the value of NAME to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_RESET_PLATE_CALIBRATION">
            <summary>
            Accesses the PC_RESET_PLATE_CALIBRATION procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_RESET_PLATE_CALIBRATION.Call(System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "ID_BRICK">the value of ID_BRICK to be used for the procedure call.</param>
            <param name = "ID_PLATE">the value of ID_PLATE to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SCANBACK_CANCEL_PATH">
            <summary>
            Accesses the PC_SCANBACK_CANCEL_PATH procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SCANBACK_CANCEL_PATH.Call(System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "P_BRICKID">the value of P_BRICKID to be used for the procedure call.</param>
            <param name = "P_PATHID">the value of P_PATHID to be used for the procedure call.</param>
            <param name = "P_PLATEID">the value of P_PLATEID to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SCANBACK_CANDIDATE">
            <summary>
            Accesses the PC_SCANBACK_CANDIDATE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SCANBACK_CANDIDATE.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "P_BRICKID">the value of P_BRICKID to be used for the procedure call.</param>
            <param name = "P_PLATEID">the value of P_PLATEID to be used for the procedure call.</param>
            <param name = "P_PATHID">the value of P_PATHID to be used for the procedure call.</param>
            <param name = "P_ZONEID">the value of P_ZONEID to be used for the procedure call.</param>
            <param name = "P_CANDID">the value of P_CANDID to be used for the procedure call.</param>
            <param name = "P_MANUAL">the value of P_MANUAL to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SCANBACK_DAMAGEDZONE">
            <summary>
            Accesses the PC_SCANBACK_DAMAGEDZONE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SCANBACK_DAMAGEDZONE.Call(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "P_BRICKID">the value of P_BRICKID to be used for the procedure call.</param>
            <param name = "P_PLATEID">the value of P_PLATEID to be used for the procedure call.</param>
            <param name = "P_PATHID">the value of P_PATHID to be used for the procedure call.</param>
            <param name = "P_DAMAGE">the value of P_DAMAGE to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SCANBACK_DELETE_PREDICTIONS">
            <summary>
            Accesses the PC_SCANBACK_DELETE_PREDICTIONS procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SCANBACK_DELETE_PREDICTIONS.Call(System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "ID_BRICK">the value of ID_BRICK to be used for the procedure call.</param>
            <param name = "ID_PROCOP">the value of ID_PROCOP to be used for the procedure call.</param>
            <param name = "ID_PL">the value of ID_PL to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SCANBACK_FORK">
            <summary>
            Accesses the PC_SCANBACK_FORK procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SCANBACK_FORK.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "P_BRICKID">the value of P_BRICKID to be used for the procedure call.</param>
            <param name = "P_PLATEID">the value of P_PLATEID to be used for the procedure call.</param>
            <param name = "P_PATHID">the value of P_PATHID to be used for the procedure call.</param>
            <param name = "P_ZONEID">the value of P_ZONEID to be used for the procedure call.</param>
            <param name = "P_CANDID">the value of P_CANDID to be used for the procedure call.</param>
            <param name = "P_FORKID">the value of P_FORKID to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SCANBACK_NOCANDIDATE">
            <summary>
            Accesses the PC_SCANBACK_NOCANDIDATE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SCANBACK_NOCANDIDATE.Call(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "P_BRICKID">the value of P_BRICKID to be used for the procedure call.</param>
            <param name = "P_PLATEID">the value of P_PLATEID to be used for the procedure call.</param>
            <param name = "P_PATHID">the value of P_PATHID to be used for the procedure call.</param>
            <param name = "P_ZONEID">the value of P_ZONEID to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SET_CSCAND_SBPATH">
            <summary>
            Accesses the PC_SET_CSCAND_SBPATH procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SET_CSCAND_SBPATH.Call(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "C_BRICKID">the value of C_BRICKID to be used for the procedure call.</param>
            <param name = "C_CAND">the value of C_CAND to be used for the procedure call.</param>
            <param name = "S_BRICKID">the value of S_BRICKID to be used for the procedure call.</param>
            <param name = "S_PROCOPID">the value of S_PROCOPID to be used for the procedure call.</param>
            <param name = "S_PATH">the value of S_PATH to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SET_MACHINE">
            <summary>
            Accesses the PC_SET_MACHINE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SET_MACHINE.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "M_ID">the value of M_ID to be used for the procedure call.</param>
            <param name = "M_NAME">the value of M_NAME to be used for the procedure call.</param>
            <param name = "M_ADDRESS">the value of M_ADDRESS to be used for the procedure call.</param>
            <param name = "M_SCANSRV">the value of M_SCANSRV to be used for the procedure call.</param>
            <param name = "M_BATCHSRV">the value of M_BATCHSRV to be used for the procedure call.</param>
            <param name = "M_DATAPROCSRV">the value of M_DATAPROCSRV to be used for the procedure call.</param>
            <param name = "M_WEBSRV">the value of M_WEBSRV to be used for the procedure call.</param>
            <param name = "M_DBSRV">the value of M_DBSRV to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SET_PASSWORD">
            <summary>
            Accesses the PC_SET_PASSWORD procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SET_PASSWORD.Call(System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "U_ID">the value of U_ID to be used for the procedure call.</param>
            <param name = "OLDPWD">the value of OLDPWD to be used for the procedure call.</param>
            <param name = "NEWPWD">the value of NEWPWD to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SET_PLATE_DAMAGED">
            <summary>
            Accesses the PC_SET_PLATE_DAMAGED procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SET_PLATE_DAMAGED.Call(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "ID_BRICK">the value of ID_BRICK to be used for the procedure call.</param>
            <param name = "ID_PL">the value of ID_PL to be used for the procedure call.</param>
            <param name = "ID_PROCOP">the value of ID_PROCOP to be used for the procedure call.</param>
            <param name = "DAMAGECODE">the value of DAMAGECODE to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SET_PLATE_Z">
            <summary>
            Accesses the PC_SET_PLATE_Z procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SET_PLATE_Z.Call(System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "B_BRICK">the value of B_BRICK to be used for the procedure call.</param>
            <param name = "B_IDPL">the value of B_IDPL to be used for the procedure call.</param>
            <param name = "B_PLZ">the value of B_PLZ to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SET_PREDTRACKS_SBPATH">
            <summary>
            Accesses the PC_SET_PREDTRACKS_SBPATH procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SET_PREDTRACKS_SBPATH.Call(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "S_EVENT">the value of S_EVENT to be used for the procedure call.</param>
            <param name = "S_TRACK">the value of S_TRACK to be used for the procedure call.</param>
            <param name = "S_BRICKID">the value of S_BRICKID to be used for the procedure call.</param>
            <param name = "S_PROCOPID">the value of S_PROCOPID to be used for the procedure call.</param>
            <param name = "S_PATH">the value of S_PATH to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SET_PREDTRACK_SBPATH">
            <summary>
            Accesses the PC_SET_PREDTRACK_SBPATH procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SET_PREDTRACK_SBPATH.Call(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "S_EVENT">the value of S_EVENT to be used for the procedure call.</param>
            <param name = "S_TRACK">the value of S_TRACK to be used for the procedure call.</param>
            <param name = "S_BRICKID">the value of S_BRICKID to be used for the procedure call.</param>
            <param name = "S_PROCOPID">the value of S_PROCOPID to be used for the procedure call.</param>
            <param name = "S_PATH">the value of S_PATH to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SET_PRIVILEGES">
            <summary>
            Accesses the PC_SET_PRIVILEGES procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SET_PRIVILEGES.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "U_ID">the value of U_ID to be used for the procedure call.</param>
            <param name = "S_ID">the value of S_ID to be used for the procedure call.</param>
            <param name = "P_SCAN">the value of P_SCAN to be used for the procedure call.</param>
            <param name = "P_WEBAN">the value of P_WEBAN to be used for the procedure call.</param>
            <param name = "P_DATAPROC">the value of P_DATAPROC to be used for the procedure call.</param>
            <param name = "P_DATADWNL">the value of P_DATADWNL to be used for the procedure call.</param>
            <param name = "P_PROCSTART">the value of P_PROCSTART to be used for the procedure call.</param>
            <param name = "P_ADMIN">the value of P_ADMIN to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SET_SBPATH_VOLUME">
            <summary>
            Accesses the PC_SET_SBPATH_VOLUME procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SET_SBPATH_VOLUME.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "S_BRICKID">the value of S_BRICKID to be used for the procedure call.</param>
            <param name = "S_PROCOPID">the value of S_PROCOPID to be used for the procedure call.</param>
            <param name = "S_PATH">the value of S_PATH to be used for the procedure call.</param>
            <param name = "S_PLATE">the value of S_PLATE to be used for the procedure call.</param>
            <param name = "V_PROCOPID">the value of V_PROCOPID to be used for the procedure call.</param>
            <param name = "V_VOLUME">the value of V_VOLUME to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SET_SITE">
            <summary>
            Accesses the PC_SET_SITE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SET_SITE.Call(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "S_ID">the value of S_ID to be used for the procedure call.</param>
            <param name = "S_NAME">the value of S_NAME to be used for the procedure call.</param>
            <param name = "S_LATITUDE">the value of S_LATITUDE to be used for the procedure call.</param>
            <param name = "S_LONGITUDE">the value of S_LONGITUDE to be used for the procedure call.</param>
            <param name = "S_LOCALTIMEFUSE">the value of S_LOCALTIMEFUSE to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SET_USER">
            <summary>
            Accesses the PC_SET_USER procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SET_USER.Call(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "U_ID">the value of U_ID to be used for the procedure call.</param>
            <param name = "U_USERNAME">the value of U_USERNAME to be used for the procedure call.</param>
            <param name = "U_PWD">the value of U_PWD to be used for the procedure call.</param>
            <param name = "U_NAME">the value of U_NAME to be used for the procedure call.</param>
            <param name = "U_SURNAME">the value of U_SURNAME to be used for the procedure call.</param>
            <param name = "U_INST">the value of U_INST to be used for the procedure call.</param>
            <param name = "U_EMAIL">the value of U_EMAIL to be used for the procedure call.</param>
            <param name = "U_ADDRESS">the value of U_ADDRESS to be used for the procedure call.</param>
            <param name = "U_PHONE">the value of U_PHONE to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SET_VOLUMESLICE_ZONE">
            <summary>
            Accesses the PC_SET_VOLUMESLICE_ZONE procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SET_VOLUMESLICE_ZONE.Call(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "P_BRICKID">the value of P_BRICKID to be used for the procedure call.</param>
            <param name = "P_PLATEID">the value of P_PLATEID to be used for the procedure call.</param>
            <param name = "P_VOLID">the value of P_VOLID to be used for the procedure call.</param>
            <param name = "P_ZONEID">the value of P_ZONEID to be used for the procedure call.</param>
            <param name = "P_DAMAGED">the value of P_DAMAGED to be used for the procedure call.</param>
        </member>
        <member name="T:SySal.OperaDb.Schema.PC_SUCCESS_OPERATION">
            <summary>
            Accesses the PC_SUCCESS_OPERATION procedure in the DB.
            </summary>
        </member>
        <member name="M:SySal.OperaDb.Schema.PC_SUCCESS_OPERATION.Call(System.Object,System.Object)">
            <summary>
            Calls the procedure.
            </summary>
            <param name = "O_ID">the value of O_ID to be used for the procedure call.</param>
            <param name = "O_FINISHTIME">the value of O_FINISHTIME to be used for the procedure call.</param>
        </member>
        <member name="P:SySal.OperaDb.Schema.DB">
            <summary>
            The DB connection currently used by the Schema class. Must be set before using any child class.
            </summary>
        </member>
    </members>
</doc>
